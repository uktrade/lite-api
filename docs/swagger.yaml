swagger: '2.0'
info:
  title: LITE API
  description: Service for handling backend calls in LITE.
  termsOfService: https://github.com/uktrade/lite-api/blob/master/LICENSE
  contact:
    url: https://github.com/uktrade/lite-api/
    email: tbd@local
  license:
    name: MIT License
  version: v0.3
basePath: /
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  Basic:
    type: basic
security:
  - Basic: []
paths:
  /applications/:
    get:
      operationId: applications_list
      description: ''
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/GenericApplicationList'
      tags:
        - applications
    post:
      operationId: applications_create
      description: "Create a new application\nTypes include StandardApplication, OpenApplication\
        \ and HmrcQuery"
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/GenericApplicationList'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/GenericApplicationList'
      tags:
        - applications
    parameters: []
  /applications/good-on-application/{obj_pk}/:
    delete:
      operationId: applications_good-on-application_delete
      description: Good on a standard application.
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - applications
    parameters:
      - name: obj_pk
        in: path
        required: true
        type: string
  /applications/{id}/:
    get:
      operationId: applications_read
      description: Retrieve an application instance
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - applications
    put:
      operationId: applications_update
      description: Update an application instance
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - applications
    patch:
      operationId: applications_partial_update
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - applications
    delete:
      operationId: applications_delete
      description: Deleting an application should only be allowed for draft applications
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - applications
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /applications/{id}/consignee/:
    post:
      operationId: applications_consignee_create
      description: Create a consignee and add it to a application
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - applications
    delete:
      operationId: applications_consignee_delete
      description: Delete a consignee and their document from an application
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - applications
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /applications/{id}/consignee/document/:
    get:
      operationId: applications_consignee_document_list
      description: Retrieve, add or delete a consignee document from an application
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - applications
    post:
      operationId: applications_consignee_document_create
      description: Retrieve, add or delete a consignee document from an application
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/PartyDocument'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/PartyDocument'
        '400':
          description: JSON parse error
      tags:
        - applications
    delete:
      operationId: applications_consignee_document_delete
      description: Retrieve, add or delete a consignee document from an application
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/PartyDocument'
      responses:
        '204':
          description: ''
        '400':
          description: JSON parse error
      tags:
        - applications
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /applications/{id}/countries/:
    get:
      operationId: applications_countries_list
      description: View countries belonging to an open licence application
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - applications
    post:
      operationId: applications_countries_create
      description: Add countries to an open licence application.
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - applications
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /applications/{id}/documents/:
    get:
      operationId: applications_documents_list
      description: View all additional documents on an application
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - applications
    post:
      operationId: applications_documents_create
      description: Upload additional document onto an application
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/ApplicationDocument'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/ApplicationDocument'
        '400':
          description: JSON parse error
      tags:
        - applications
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /applications/{id}/documents/{doc_pk}/:
    get:
      operationId: applications_documents_read
      description: View an additional document on an application
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - applications
    delete:
      operationId: applications_documents_delete
      description: Delete an additional document on an application
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/ApplicationDocument'
      responses:
        '204':
          description: ''
        '400':
          description: JSON parse error
      tags:
        - applications
    parameters:
      - name: doc_pk
        in: path
        required: true
        type: string
      - name: id
        in: path
        required: true
        type: string
  /applications/{id}/end-user/:
    post:
      operationId: applications_end-user_create
      description: Create an end user and add it to a application
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - applications
    delete:
      operationId: applications_end-user_delete
      description: Delete an end user and their document from an application
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - applications
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /applications/{id}/end-user/document/:
    get:
      operationId: applications_end-user_document_list
      description: Retrieve, add or delete an end user document from an application
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - applications
    post:
      operationId: applications_end-user_document_create
      description: Retrieve, add or delete an end user document from an application
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/PartyDocument'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/PartyDocument'
        '400':
          description: JSON parse error
      tags:
        - applications
    delete:
      operationId: applications_end-user_document_delete
      description: Retrieve, add or delete an end user document from an application
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/PartyDocument'
      responses:
        '204':
          description: ''
        '400':
          description: JSON parse error
      tags:
        - applications
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /applications/{id}/external_locations/:
    get:
      operationId: applications_external_locations_list
      description: View sites belonging to a draft or add them.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - applications
    post:
      operationId: applications_external_locations_create
      description: View sites belonging to a draft or add them.
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - applications
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /applications/{id}/external_locations/{ext_loc_pk}/:
    delete:
      operationId: applications_external_locations_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - applications
    parameters:
      - name: ext_loc_pk
        in: path
        required: true
        type: string
      - name: id
        in: path
        required: true
        type: string
  /applications/{id}/generated-documents/:
    get:
      operationId: applications_generated-documents_list
      description: Gets a list of generated documents for the application's case
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - applications
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /applications/{id}/generated-documents/{gcd_pk}/:
    get:
      operationId: applications_generated-documents_read
      description: Gets a generated document for the application's case
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - applications
    parameters:
      - name: gcd_pk
        in: path
        required: true
        type: string
      - name: id
        in: path
        required: true
        type: string
  /applications/{id}/goods/:
    get:
      operationId: applications_goods_list
      description: Goods belonging to a standard application
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - applications
    post:
      operationId: applications_goods_create
      description: Goods belonging to a standard application
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - applications
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /applications/{id}/goodstype/{goods_type_pk}/document/:
    get:
      operationId: applications_goodstype_document_list
      description: Retrieve, add or delete a third party document from an application
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - applications
    post:
      operationId: applications_goodstype_document_create
      description: Retrieve, add or delete a third party document from an application
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/GoodsTypeDocument'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/GoodsTypeDocument'
        '400':
          description: JSON parse error
      tags:
        - applications
    delete:
      operationId: applications_goodstype_document_delete
      description: Retrieve, add or delete a third party document from an application
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/GoodsTypeDocument'
      responses:
        '204':
          description: ''
        '400':
          description: JSON parse error
      tags:
        - applications
    parameters:
      - name: goods_type_pk
        in: path
        required: true
        type: string
      - name: id
        in: path
        required: true
        type: string
  /applications/{id}/goodstype/{goodstype_pk}/:
    get:
      operationId: applications_goodstype_read
      description: Gets a goodstype
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - applications
    delete:
      operationId: applications_goodstype_delete
      description: Deletes a goodstype
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - applications
    parameters:
      - name: goodstype_pk
        in: path
        required: true
        type: string
      - name: id
        in: path
        required: true
        type: string
  /applications/{id}/goodstype/{goodstype_pk}/assign-countries/:
    put:
      operationId: applications_goodstype_assign-countries_update
      description: Sets countries on goodstype
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - applications
    parameters:
      - name: goodstype_pk
        in: path
        required: true
        type: string
      - name: id
        in: path
        required: true
        type: string
  /applications/{id}/goodstypes/:
    get:
      operationId: applications_goodstypes_list
      description: Goodstypes belonging to an open application.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - applications
    post:
      operationId: applications_goodstypes_create
      description: Post a goodstype
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - applications
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /applications/{id}/sites/:
    get:
      operationId: applications_sites_list
      description: View sites belonging to an application or add them.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - applications
    post:
      operationId: applications_sites_create
      description: View sites belonging to an application or add them.
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - applications
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /applications/{id}/status/:
    put:
      operationId: applications_status_update
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - applications
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /applications/{id}/submit/:
    put:
      operationId: applications_submit_update
      description: Submit a draft-application which will set its submitted_at datetime
        and status before creating a case
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - applications
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /applications/{id}/third-parties/:
    get:
      operationId: applications_third-parties_list
      description: Get third parties associated with a application
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - applications
    post:
      operationId: applications_third-parties_create
      description: Create a third party and add it to a application
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - applications
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /applications/{id}/third-parties/{tp_pk}:
    delete:
      operationId: applications_third-parties_delete
      description: Delete a third party and remove it from the application.
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - applications
    parameters:
      - name: id
        in: path
        required: true
        type: string
      - name: tp_pk
        in: path
        required: true
        type: string
  /applications/{id}/third-parties/{tp_pk}/document/:
    get:
      operationId: applications_third-parties_document_list
      description: Retrieve, add or delete a third party document from an application
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - applications
    post:
      operationId: applications_third-parties_document_create
      description: Retrieve, add or delete a third party document from an application
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/PartyDocument'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/PartyDocument'
        '400':
          description: JSON parse error
      tags:
        - applications
    delete:
      operationId: applications_third-parties_document_delete
      description: Retrieve, add or delete a third party document from an application
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/PartyDocument'
      responses:
        '204':
          description: ''
        '400':
          description: JSON parse error
      tags:
        - applications
    parameters:
      - name: id
        in: path
        required: true
        type: string
      - name: tp_pk
        in: path
        required: true
        type: string
  /applications/{id}/ultimate-end-user/{ueu_pk}/document/:
    get:
      operationId: applications_ultimate-end-user_document_list
      description: Retrieve, add or delete an ultimate end user document from an application
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - applications
    post:
      operationId: applications_ultimate-end-user_document_create
      description: Retrieve, add or delete an ultimate end user document from an application
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/PartyDocument'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/PartyDocument'
        '400':
          description: JSON parse error
      tags:
        - applications
    delete:
      operationId: applications_ultimate-end-user_document_delete
      description: Retrieve, add or delete an ultimate end user document from an application
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/PartyDocument'
      responses:
        '204':
          description: ''
        '400':
          description: JSON parse error
      tags:
        - applications
    parameters:
      - name: id
        in: path
        required: true
        type: string
      - name: ueu_pk
        in: path
        required: true
        type: string
  /applications/{id}/ultimate-end-users/:
    get:
      operationId: applications_ultimate-end-users_list
      description: Get ultimate end users associated with a application
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - applications
    post:
      operationId: applications_ultimate-end-users_create
      description: Create an ultimate end user and add it to a application
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - applications
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /applications/{id}/ultimate-end-users/{ueu_pk}:
    delete:
      operationId: applications_ultimate-end-users_delete
      description: Delete an ultimate end user and remove it from the application
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - applications
    parameters:
      - name: id
        in: path
        required: true
        type: string
      - name: ueu_pk
        in: path
        required: true
        type: string
  /cases/:
    get:
      operationId: cases_list
      description: Provides a search view for the Case model.
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
      tags:
        - cases
    parameters: []
  /cases/{id}/:
    get:
      operationId: cases_read
      description: Retrieve a case instance
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - cases
    put:
      operationId: cases_update
      description: Change the queues a case belongs to
      parameters: []
      responses:
        '200':
          description: ''
        '400':
          description: Input error, "queues" should be an array with at least one
            existing queue
      tags:
        - cases
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /cases/{id}/activity/:
    get:
      operationId: cases_activity_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - cases
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /cases/{id}/case-notes/:
    get:
      operationId: cases_case-notes_list
      description: Gets all case notes.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - cases
    post:
      operationId: cases_case-notes_create
      description: Create a case note on a case.
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - cases
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /cases/{id}/documents/:
    get:
      operationId: cases_documents_list
      description: Returns a list of documents on the specified case
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - cases
    post:
      operationId: cases_documents_create
      description: Adds a document to the specified case
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/CaseDocumentCreate'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/CaseDocumentCreate'
        '400':
          description: JSON parse error
      tags:
        - cases
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /cases/{id}/documents/{s3_key}/:
    get:
      operationId: cases_documents_read
      description: Returns a list of documents on the specified case
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - cases
    parameters:
      - name: id
        in: path
        required: true
        type: string
      - name: s3_key
        in: path
        required: true
        type: string
  /cases/{id}/ecju-queries/:
    get:
      operationId: cases_ecju-queries_list
      description: Returns the list of ECJU Queries on a case
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - cases
    post:
      operationId: cases_ecju-queries_create
      description: Add a new ECJU query
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - cases
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /cases/{id}/ecju-queries/{ecju_pk}/:
    get:
      operationId: cases_ecju-queries_read
      description: Returns details of an ecju query
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - cases
    put:
      operationId: cases_ecju-queries_update
      description: "If not validate only Will update the ecju query instance, with\
        \ a response, and return the data details.\nIf validate only, this will return\
        \ if the data is acceptable or not."
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - cases
    parameters:
      - name: ecju_pk
        in: path
        required: true
        type: string
      - name: id
        in: path
        required: true
        type: string
  /cases/{id}/final-advice/:
    get:
      operationId: cases_final-advice_list
      description: Concatenates all advice for a case and returns it or just returns
        if team advice already exists
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - cases
    post:
      operationId: cases_final-advice_create
      description: Creates advice for a case
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/CaseFinalAdvice'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/CaseFinalAdvice'
        '400':
          description: JSON parse error
      tags:
        - cases
    delete:
      operationId: cases_final-advice_delete
      description: Clears team level advice and reopens the advice for user level
        for that team
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - cases
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /cases/{id}/generated-documents/:
    post:
      operationId: cases_generated-documents_create
      description: Create a generated document
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - cases
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /cases/{id}/generated-documents/preview/:
    get:
      operationId: cases_generated-documents_preview_list
      description: Get a preview of the document to be generated
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - cases
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /cases/{id}/generated-documents/{id}/:
    get:
      operationId: cases_generated-documents_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/GeneratedCaseDocumentGov'
      tags:
        - cases
    parameters:
      - name: id
        in: path
        description: A UUID string identifying this generated case document.
        required: true
        type: string
        format: uuid
  /cases/{id}/goods-countries-decisions/:
    get:
      operationId: cases_goods-countries-decisions_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - cases
    post:
      operationId: cases_goods-countries-decisions_create
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - cases
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /cases/{id}/team-advice/:
    get:
      operationId: cases_team-advice_list
      description: Concatenates all advice for a case and returns it or just returns
        if team advice already exists
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - cases
    post:
      operationId: cases_team-advice_create
      description: Creates advice for a case
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/CaseTeamAdvice'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/CaseTeamAdvice'
        '400':
          description: JSON parse error
      tags:
        - cases
    delete:
      operationId: cases_team-advice_delete
      description: Clears team level advice and reopens the advice for user level
        for that team
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - cases
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /cases/{id}/user-advice/:
    get:
      operationId: cases_user-advice_list
      description: Returns all advice for a case
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - cases
    post:
      operationId: cases_user-advice_create
      description: Creates advice for a case
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/CaseAdvice'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/CaseAdvice'
        '400':
          description: JSON parse error
      tags:
        - cases
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /cases/{id}/view-final-advice/:
    get:
      operationId: cases_view-final-advice_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - cases
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /cases/{id}/view-team-advice/{team_pk}/:
    get:
      operationId: cases_view-team-advice_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - cases
    parameters:
      - name: id
        in: path
        required: true
        type: string
      - name: team_pk
        in: path
        required: true
        type: string
  /documents/{id}/:
    get:
      operationId: documents_read
      description: Returns document metadata
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - documents
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /flags/:
    get:
      operationId: flags_list
      description: Returns list of all flags
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - flags
    post:
      operationId: flags_create
      description: Add a new flag
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - flags
    parameters: []
  /flags/assign/:
    put:
      operationId: flags_assign_update
      description: Assigns flags to goods and cases
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - flags
    parameters: []
  /flags/{id}/:
    get:
      operationId: flags_read
      description: Returns details of a specific flag
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - flags
    put:
      operationId: flags_update
      description: Edit details of a specific flag
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - flags
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /goods/:
    get:
      operationId: goods_list
      description: Returns a list of all goods belonging to an organisation
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - goods
    post:
      operationId: goods_create
      description: Add a good to to an organisation
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - goods
    parameters: []
  /goods/controlcode/{case_pk}/:
    post:
      operationId: goods_controlcode_create
      description: Set control list codes on multiple goods.
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - goods
    parameters:
      - name: case_pk
        in: path
        required: true
        type: string
  /goods/{id}/:
    get:
      operationId: goods_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - goods
    put:
      operationId: goods_update
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - goods
    delete:
      operationId: goods_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - goods
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /goods/{id}/documents/:
    get:
      operationId: goods_documents_list
      description: Returns a list of documents on the specified good
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - goods
    post:
      operationId: goods_documents_create
      description: Adds a document to the specified good
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/GoodDocumentCreate'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/GoodDocumentCreate'
        '400':
          description: JSON parse error
      tags:
        - goods
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /goods/{id}/documents/{doc_pk}/:
    get:
      operationId: goods_documents_read
      description: Returns a list of documents on the specified good
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - goods
    delete:
      operationId: goods_documents_delete
      description: Deletes good document
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - goods
    parameters:
      - name: doc_pk
        in: path
        required: true
        type: string
      - name: id
        in: path
        required: true
        type: string
  /goodstype/:
    get:
      operationId: goodstype_list
      description: Gets list of all Goods Types
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - goodstype
    parameters: []
  /goodstype/{id}/:
    get:
      operationId: goodstype_read
      description: Gets a single Goods Type
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - goodstype
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /gov-users/:
    get:
      operationId: gov-users_list
      description: Fetches all government users
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - gov-users
    post:
      operationId: gov-users_create
      description: Add a new gov user
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/GovUserCreate'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/GovUserCreate'
        '400':
          description: JSON parse error
      tags:
        - gov-users
    parameters: []
  /gov-users/authenticate/:
    post:
      operationId: gov-users_authenticate_create
      description: "Takes user details from sso and checks them against our whitelisted\
        \ users\nReturns a token which is just our ID for the user\n:param request:\n\
        :param email, first_name, last_name:\n:return token:"
      parameters: []
      responses:
        '201':
          description: ''
        '400':
          description: JSON parse error
        '403':
          description: Forbidden
      tags:
        - gov-users
    parameters: []
  /gov-users/me/:
    get:
      operationId: gov-users_me_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - gov-users
    parameters: []
  /gov-users/permissions/:
    get:
      operationId: gov-users_permissions_list
      description: Return list of all permissions
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - gov-users
    parameters: []
  /gov-users/roles/:
    get:
      operationId: gov-users_roles_list
      description: Return list of all roles
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - gov-users
    post:
      operationId: gov-users_roles_create
      description: Create a role
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Role'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Role'
        '400':
          description: JSON parse error
      tags:
        - gov-users
    parameters: []
  /gov-users/roles/{id}/:
    get:
      operationId: gov-users_roles_read
      description: Get the details of a specific role
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - gov-users
    put:
      operationId: gov-users_roles_update
      description: update a role
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Role'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Role'
        '400':
          description: JSON parse error
      tags:
        - gov-users
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /gov-users/{id}/:
    get:
      operationId: gov-users_read
      description: Get user from pk
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - gov-users
    put:
      operationId: gov-users_update
      description: Edit user from pk
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/GovUserCreate'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/GovUserCreate'
        '400':
          description: Bad Request
      tags:
        - gov-users
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /letter-templates/:
    get:
      operationId: letter-templates_list
      description: Returns list of all letter templates or creates a letter template
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/LetterTemplate'
      tags:
        - letter-templates
    post:
      operationId: letter-templates_create
      description: Returns list of all letter templates or creates a letter template
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/LetterTemplate'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/LetterTemplate'
      tags:
        - letter-templates
    parameters: []
  /letter-templates/generate-preview/:
    get:
      operationId: letter-templates_generate-preview_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - letter-templates
    parameters: []
  /letter-templates/{id}/:
    get:
      operationId: letter-templates_read
      description: Returns detail of a specific letter template
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/LetterTemplate'
      tags:
        - letter-templates
    put:
      operationId: letter-templates_update
      description: Returns detail of a specific letter template
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/LetterTemplate'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/LetterTemplate'
      tags:
        - letter-templates
    patch:
      operationId: letter-templates_partial_update
      description: Returns detail of a specific letter template
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/LetterTemplate'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/LetterTemplate'
      tags:
        - letter-templates
    parameters:
      - name: id
        in: path
        description: A UUID string identifying this letter template.
        required: true
        type: string
        format: uuid
  /organisations/:
    get:
      operationId: organisations_list
      description: ''
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/OrganisationDetail'
      tags:
        - organisations
    post:
      operationId: organisations_create
      description: Create a new organisation
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OrganisationCreate'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/OrganisationCreate'
        '400':
          description: JSON parse error
      tags:
        - organisations
    parameters: []
  /organisations/permissions/:
    get:
      operationId: organisations_permissions_list
      description: Return list of all permissions
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - organisations
    parameters: []
  /organisations/{id}/:
    get:
      operationId: organisations_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OrganisationDetail'
      tags:
        - organisations
    parameters:
      - name: id
        in: path
        description: A UUID string identifying this organisation.
        required: true
        type: string
        format: uuid
  /organisations/{org_pk}/external_locations/:
    get:
      operationId: organisations_external_locations_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - organisations
    post:
      operationId: organisations_external_locations_create
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - organisations
    parameters:
      - name: org_pk
        in: path
        required: true
        type: string
  /organisations/{org_pk}/roles/:
    get:
      operationId: organisations_roles_list
      description: ''
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Role'
      tags:
        - organisations
    post:
      operationId: organisations_roles_create
      description: Create a role
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Role'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Role'
        '400':
          description: JSON parse error
      tags:
        - organisations
    parameters:
      - name: org_pk
        in: path
        required: true
        type: string
  /organisations/{org_pk}/roles/{id}/:
    get:
      operationId: organisations_roles_read
      description: Get the details of a specific role
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - organisations
    put:
      operationId: organisations_roles_update
      description: update a role
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Role'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Role'
        '400':
          description: JSON parse error
      tags:
        - organisations
    parameters:
      - name: id
        in: path
        required: true
        type: string
      - name: org_pk
        in: path
        required: true
        type: string
  /organisations/{org_pk}/sites/:
    get:
      operationId: organisations_sites_list
      description: "Endpoint for listing the Sites of an organisation\nAn organisation\
        \ must have at least one site"
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - organisations
    post:
      operationId: organisations_sites_create
      description: List all sites for an organisation/create site
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - organisations
    parameters:
      - name: org_pk
        in: path
        required: true
        type: string
  /organisations/{org_pk}/sites/{site_pk}/:
    get:
      operationId: organisations_sites_read
      description: Show details for for a specific site/edit site
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - organisations
    put:
      operationId: organisations_sites_update
      description: Show details for for a specific site/edit site
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - organisations
    parameters:
      - name: org_pk
        in: path
        required: true
        type: string
      - name: site_pk
        in: path
        required: true
        type: string
  /organisations/{org_pk}/users/:
    get:
      operationId: organisations_users_list
      description: List all users from the specified organisation
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - organisations
    post:
      operationId: organisations_users_create
      description: Create an exporter user within the specified organisation
      parameters: []
      responses:
        '201':
          description: ''
        '400':
          description: JSON parse error
      tags:
        - organisations
    parameters:
      - name: org_pk
        in: path
        required: true
        type: string
  /organisations/{org_pk}/users/{user_pk}/:
    get:
      operationId: organisations_users_read
      description: Return a user from the specified organisation
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - organisations
    put:
      operationId: organisations_users_update
      description: Update the status of a user
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - organisations
    parameters:
      - name: org_pk
        in: path
        required: true
        type: string
      - name: user_pk
        in: path
        required: true
        type: string
  /picklist/:
    get:
      operationId: picklist_list
      description: Returns a list of all picklist items, filtered by type and by show_deactivated
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - picklist
    post:
      operationId: picklist_create
      description: Add a new picklist item
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - picklist
    parameters: []
  /picklist/{id}/:
    get:
      operationId: picklist_read
      description: Gets details of a specific picklist item
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - picklist
    put:
      operationId: picklist_update
      description: Edit status of a new picklist item
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - picklist
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /queries/control-list-classifications/:
    post:
      operationId: queries_control-list-classifications_create
      description: Create a new CLC query case instance
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - queries
    parameters: []
  /queries/control-list-classifications/{id}/:
    put:
      operationId: queries_control-list-classifications_update
      description: Respond to a control list classification.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - queries
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /queries/end-user-advisories/:
    get:
      operationId: queries_end-user-advisories_list
      description: View all end user advisories belonging to an organisation.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - queries
    post:
      operationId: queries_end-user-advisories_create
      description: Create a new End User Advisory Enquiry query case instance
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - queries
    parameters: []
  /queries/end-user-advisories/{id}/:
    get:
      operationId: queries_end-user-advisories_read
      description: View a single end user advisory's details
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - queries
    put:
      operationId: queries_end-user-advisories_update
      description: Update an end user advisory instance.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - queries
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /queues/:
    get:
      operationId: queues_list
      description: "Gets all queues.\nOptionally includes the system defined, pseudo\
        \ queues \"All cases\" and \"Open cases\""
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - queues
    post:
      operationId: queues_create
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - queues
    parameters: []
  /queues/{id}/:
    get:
      operationId: queues_read
      description: Retrieve a queue instance
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - queues
    put:
      operationId: queues_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/QueueCreate'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/QueueCreate'
      tags:
        - queues
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /queues/{id}/case-assignments/:
    get:
      operationId: queues_case-assignments_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - queues
    put:
      operationId: queues_case-assignments_update
      description: Assign users to cases on that queue
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/CaseAssignment'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CaseAssignment'
      tags:
        - queues
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /static/control-list-entries/:
    get:
      operationId: static_control-list-entries_list
      description: Returns list of all Control List Entries
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - static
    parameters: []
  /static/control-list-entries/{rating}/:
    get:
      operationId: static_control-list-entries_read
      description: Returns details of a specific control ratings
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - static
    parameters:
      - name: rating
        in: path
        required: true
        type: string
  /static/countries/:
    get:
      operationId: static_countries_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - static
    parameters: []
  /static/denial-reasons/:
    get:
      operationId: static_denial-reasons_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - static
    parameters: []
  /static/letter-layouts/:
    get:
      operationId: static_letter-layouts_list
      description: Returns list of all letter layouts
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/LetterLayout'
      tags:
        - static
    parameters: []
  /static/letter-layouts/{id}/:
    get:
      operationId: static_letter-layouts_read
      description: Returns detail of a specific letter layout
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/LetterLayout'
      tags:
        - static
    parameters:
      - name: id
        in: path
        description: A UUID string identifying this letter layout.
        required: true
        type: string
        format: uuid
  /static/statuses/:
    get:
      operationId: static_statuses_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - static
    parameters: []
  /static/statuses/properties/{status}/:
    get:
      operationId: static_statuses_properties_read
      description: Return is_read_only and is_terminal properties for a case status.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - static
    parameters:
      - name: status
        in: path
        required: true
        type: string
  /static/units/:
    get:
      operationId: static_units_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - static
    parameters: []
  /static/upload-document-for-tests/:
    get:
      operationId: static_upload-document-for-tests_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - static
    parameters: []
  /teams/:
    get:
      operationId: teams_list
      description: List all teams
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Team'
      tags:
        - teams
    post:
      operationId: teams_create
      description: Create a new team
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Team'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Team'
        '400':
          description: JSON parse error
      tags:
        - teams
    parameters: []
  /teams/{id}/:
    get:
      operationId: teams_read
      description: Retrieve a team instance
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Team'
      tags:
        - teams
    put:
      operationId: teams_update
      description: Update a team instance
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Team'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Team'
        '400':
          description: JSON parse error
      tags:
        - teams
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /teams/{id}/users/:
    get:
      operationId: teams_users_list
      description: Return a list of users by a specific team
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - teams
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /users/:
    get:
      operationId: users_list
      description: Returns a list of Exporter users
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - users
    post:
      operationId: users_create
      description: Create Exporter within the same organisation that current user
        is logged into
      parameters: []
      responses:
        '201':
          description: ''
        '400':
          description: JSON parse error
      tags:
        - users
    parameters: []
  /users/authenticate/:
    post:
      operationId: users_authenticate_create
      description: "Takes user details from sso and checks them against our whitelisted\
        \ users\nReturns a token which is just our ID for the user"
      parameters: []
      responses:
        '201':
          description: ''
        '400':
          description: JSON parse error
        '403':
          description: Forbidden
      tags:
        - users
    parameters: []
  /users/case-notification/:
    get:
      operationId: users_case-notification_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - users
    parameters: []
  /users/me/:
    get:
      operationId: users_me_list
      description: Get the user from request
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - users
    parameters: []
  /users/notifications/:
    get:
      operationId: users_notifications_list
      description: ''
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Notification'
      tags:
        - users
    parameters: []
  /users/{id}/:
    get:
      operationId: users_read
      description: Get user from pk
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - users
    put:
      operationId: users_update
      description: Update Exporter user
      parameters: []
      responses:
        '200':
          description: ''
        '400':
          description: JSON parse error
      tags:
        - users
    parameters:
      - name: id
        in: path
        required: true
        type: string
definitions:
  OrganisationDetail:
    title: Organisation
    required:
      - primary_site
      - type
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      primary_site:
        title: Primary site
        type: string
        format: uuid
      type:
        title: Type
        type: string
      flags:
        title: Flags
        type: string
        readOnly: true
      name:
        title: Name
        type: string
      eori_number:
        title: Eori number
        type: string
        x-nullable: true
      sic_number:
        title: Sic number
        type: string
        x-nullable: true
      vat_number:
        title: Vat number
        type: string
        x-nullable: true
      registration_number:
        title: Registration number
        type: string
        x-nullable: true
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      last_modified_at:
        title: Last modified at
        type: string
        format: date-time
        readOnly: true
  GenericApplicationList:
    required:
      - name
      - organisation
      - application_type
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 100
        minLength: 1
      organisation:
        $ref: '#/definitions/OrganisationDetail'
      application_type:
        title: Application type
        type: string
      export_type:
        title: Export type
        type: string
        readOnly: true
      created:
        title: Created
        type: string
        format: date-time
        readOnly: true
      modified:
        title: Modified
        type: string
        format: date-time
        readOnly: true
      submitted_at:
        title: Submitted at
        type: string
        format: date-time
        x-nullable: true
      status:
        title: Status
        type: string
        readOnly: true
      case:
        title: Case
        type: string
        readOnly: true
  PartyDocument:
    required:
      - name
      - party
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 1000
        minLength: 1
      s3_key:
        title: S3 key
        type: string
        maxLength: 1000
        minLength: 1
      size:
        title: Size
        type: integer
        maximum: 2147483647
        minimum: -2147483648
        x-nullable: true
      party:
        title: Party
        type: string
        format: uuid
      safe:
        title: Safe
        type: boolean
        x-nullable: true
  ApplicationDocument:
    required:
      - name
      - application
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 1000
        minLength: 1
      s3_key:
        title: S3 key
        type: string
        maxLength: 1000
        minLength: 1
      size:
        title: Size
        type: integer
        maximum: 2147483647
        minimum: -2147483648
        x-nullable: true
      virus_scanned_at:
        title: Virus scanned at
        type: string
        format: date-time
        x-nullable: true
      safe:
        title: Safe
        type: boolean
        x-nullable: true
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      description:
        title: Description
        type: string
        maxLength: 280
        x-nullable: true
      application:
        title: Application
        type: string
  GoodsTypeDocument:
    required:
      - name
      - goods_type
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 1000
        minLength: 1
      s3_key:
        title: S3 key
        type: string
        maxLength: 1000
        minLength: 1
      size:
        title: Size
        type: integer
        maximum: 2147483647
        minimum: -2147483648
        x-nullable: true
      goods_type:
        title: Goods type
        type: string
        format: uuid
      safe:
        title: Safe
        type: boolean
        x-nullable: true
  CaseDocumentCreate:
    required:
      - name
      - user
      - case
    type: object
    properties:
      name:
        title: Name
        type: string
        maxLength: 1000
        minLength: 1
      s3_key:
        title: S3 key
        type: string
        maxLength: 1000
        minLength: 1
      user:
        title: User
        type: string
      size:
        title: Size
        type: integer
        maximum: 2147483647
        minimum: -2147483648
        x-nullable: true
      case:
        title: Case
        type: string
        format: uuid
      description:
        title: Description
        type: string
        maxLength: 280
        x-nullable: true
  CaseFinalAdvice:
    required:
      - case
      - user
      - type
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      case:
        title: Case
        type: string
        format: uuid
      user:
        title: User
        type: string
      proviso:
        title: Proviso
        type: string
        maxLength: 5000
        minLength: 1
      text:
        title: Text
        type: string
        maxLength: 5000
        x-nullable: true
      note:
        title: Note
        type: string
        maxLength: 200
        x-nullable: true
      type:
        title: Type
        type: string
      denial_reasons:
        type: array
        items:
          type: string
        uniqueItems: true
      good:
        title: Good
        type: string
        format: uuid
      goods_type:
        title: Goods type
        type: string
        format: uuid
      country:
        title: Country
        type: string
      end_user:
        title: End user
        type: string
      ultimate_end_user:
        title: Ultimate end user
        type: string
      consignee:
        title: Consignee
        type: string
      third_party:
        title: Third party
        type: string
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
  GeneratedCaseDocumentGov:
    required:
      - template
    type: object
    properties:
      template:
        title: Template
        type: string
        format: uuid
      text:
        title: Text
        type: string
  CaseTeamAdvice:
    required:
      - case
      - user
      - type
      - team
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      case:
        title: Case
        type: string
        format: uuid
      user:
        title: User
        type: string
      proviso:
        title: Proviso
        type: string
        maxLength: 5000
        minLength: 1
      text:
        title: Text
        type: string
        maxLength: 5000
        x-nullable: true
      note:
        title: Note
        type: string
        maxLength: 200
        x-nullable: true
      type:
        title: Type
        type: string
      denial_reasons:
        type: array
        items:
          type: string
        uniqueItems: true
      good:
        title: Good
        type: string
        format: uuid
      goods_type:
        title: Goods type
        type: string
        format: uuid
      country:
        title: Country
        type: string
      end_user:
        title: End user
        type: string
      ultimate_end_user:
        title: Ultimate end user
        type: string
      consignee:
        title: Consignee
        type: string
      third_party:
        title: Third party
        type: string
      team:
        title: Team
        type: string
        format: uuid
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
  CaseAdvice:
    required:
      - case
      - user
      - type
    type: object
    properties:
      case:
        title: Case
        type: string
        format: uuid
      user:
        title: User
        type: string
      text:
        title: Text
        type: string
        maxLength: 5000
        x-nullable: true
      note:
        title: Note
        type: string
        maxLength: 200
        x-nullable: true
      type:
        title: Type
        type: string
      proviso:
        title: Proviso
        type: string
        maxLength: 5000
        minLength: 1
      denial_reasons:
        type: array
        items:
          type: string
        uniqueItems: true
      good:
        title: Good
        type: string
        format: uuid
      goods_type:
        title: Goods type
        type: string
        format: uuid
      country:
        title: Country
        type: string
      end_user:
        title: End user
        type: string
      ultimate_end_user:
        title: Ultimate end user
        type: string
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      consignee:
        title: Consignee
        type: string
      third_party:
        title: Third party
        type: string
  GoodDocumentCreate:
    required:
      - name
      - user
      - organisation
      - good
    type: object
    properties:
      name:
        title: Name
        type: string
        maxLength: 1000
        minLength: 1
      s3_key:
        title: S3 key
        type: string
        maxLength: 1000
        minLength: 1
      user:
        title: User
        type: string
      organisation:
        title: Organisation
        type: string
        format: uuid
      size:
        title: Size
        type: integer
        maximum: 2147483647
        minimum: -2147483648
        x-nullable: true
      good:
        title: Good
        type: string
        format: uuid
      description:
        title: Description
        type: string
        maxLength: 280
        x-nullable: true
  GovUserCreate:
    required:
      - email
      - team
      - role
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      email:
        title: Email
        type: string
        format: email
        minLength: 1
      first_name:
        title: First name
        type: string
        maxLength: 30
      last_name:
        title: Last name
        type: string
        maxLength: 150
      status:
        title: Status
        type: string
        enum:
          - Active
          - Deactivated
        default: Active
      team:
        title: Team
        type: string
        format: uuid
      role:
        title: Role
        type: string
        format: uuid
  Role:
    required:
      - name
      - type
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 30
        minLength: 1
      permissions:
        type: array
        items:
          type: string
        uniqueItems: true
      type:
        title: Type
        type: string
        enum:
          - exporter
          - internal
      organisation:
        title: Organisation
        type: string
        format: uuid
        x-nullable: true
  LetterTemplate:
    required:
      - name
      - letter_paragraphs
      - case_types
      - layout
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 35
        minLength: 1
      letter_paragraphs:
        type: array
        items:
          type: string
          format: uuid
        uniqueItems: true
      case_types:
        type: array
        items:
          type: string
        uniqueItems: true
      layout:
        title: Layout
        type: string
        format: uuid
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      last_modified_at:
        title: Last modified at
        type: string
        format: date-time
        readOnly: true
  ExporterUserCreateUpdate:
    title: User
    required:
      - email
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      email:
        title: Email
        type: string
        format: email
        minLength: 1
      role:
        title: Role
        type: string
        format: uuid
      organisation:
        title: Organisation
        type: string
        format: uuid
  Address:
    title: Address
    required:
      - address_line_1
      - city
      - region
      - postcode
      - country
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      address_line_1:
        title: Address line 1
        type: string
        minLength: 1
      address_line_2:
        title: Address line 2
        type: string
        x-nullable: true
      city:
        title: City
        type: string
        minLength: 1
      region:
        title: Region
        type: string
        minLength: 1
      postcode:
        title: Postcode
        type: string
        maxLength: 10
        minLength: 1
      country:
        title: Country
        type: string
  Site:
    title: Site
    required:
      - name
      - address
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      name:
        title: Name
        type: string
        minLength: 1
      address:
        $ref: '#/definitions/Address'
      organisation:
        title: Organisation
        type: string
        format: uuid
  OrganisationCreate:
    required:
      - name
      - type
      - user
      - site
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      name:
        title: Name
        type: string
        minLength: 1
      type:
        title: Type
        type: string
      eori_number:
        title: Eori number
        type: string
      sic_number:
        title: Sic number
        type: string
        minLength: 1
      vat_number:
        title: Vat number
        type: string
      registration_number:
        title: Registration number
        type: string
        minLength: 1
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      last_modified_at:
        title: Last modified at
        type: string
        format: date-time
        readOnly: true
      user:
        $ref: '#/definitions/ExporterUserCreateUpdate'
      site:
        $ref: '#/definitions/Site'
  QueryView:
    title: Query
    required:
      - type
      - organisation
      - queues
      - flags
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      created:
        title: Created
        type: string
        format: date-time
        readOnly: true
      modified:
        title: Modified
        type: string
        format: date-time
        readOnly: true
      type:
        title: Type
        type: string
        enum:
          - application
          - clc_query
          - end_user_advisory_query
          - hmrc_query
      submitted_at:
        title: Submitted at
        type: string
        format: date-time
        x-nullable: true
      organisation:
        title: Organisation
        type: string
        format: uuid
      status:
        title: Status
        type: string
        format: uuid
        x-nullable: true
      queues:
        type: array
        items:
          type: string
          format: uuid
        uniqueItems: true
      flags:
        type: array
        items:
          type: string
          format: uuid
        uniqueItems: true
  Case:
    required:
      - type
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      type:
        title: Type
        type: string
      application:
        title: Application
        type: string
        readOnly: true
      query:
        $ref: '#/definitions/QueryView'
  QueueCreate:
    required:
      - name
      - team
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      name:
        title: Name
        type: string
        minLength: 1
      team:
        title: Team
        type: string
        format: uuid
      cases:
        type: array
        items:
          $ref: '#/definitions/Case'
        readOnly: true
  GovUserSimple:
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      first_name:
        title: First name
        type: string
        maxLength: 30
      last_name:
        title: Last name
        type: string
        maxLength: 150
      email:
        title: Email
        type: string
        format: email
        maxLength: 254
  CaseAssignment:
    required:
      - case
      - users
    type: object
    properties:
      case:
        title: Case
        type: string
        format: uuid
      users:
        type: array
        items:
          $ref: '#/definitions/GovUserSimple'
  LetterLayout:
    required:
      - filename
      - name
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      filename:
        title: Filename
        type: string
        minLength: 1
      name:
        title: Name
        type: string
        minLength: 1
  Team:
    required:
      - name
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 50
        minLength: 1
  Notification:
    type: object
    properties:
      object:
        title: Object
        type: string
        readOnly: true
      object_type:
        title: Object type
        type: string
        readOnly: true
      parent:
        title: Parent
        type: string
        readOnly: true
      parent_type:
        title: Parent type
        type: string
        readOnly: true
