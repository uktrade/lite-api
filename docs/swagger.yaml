openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /applications/:
    get:
      operationId: listGenericApplicationLists
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/GenericApplicationList'
          description: ''
      tags:
      - applications
    post:
      operationId: createGenericApplicationList
      description: Create a new application
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericApplicationList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GenericApplicationList'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericApplicationList'
          description: ''
      tags:
      - applications
  /applications/existing/:
    get:
      operationId: listApplicationExistings
      description: 'This view returns boolean values depending on the type of organisation:

        HMRC - Whether the organisation has existing submitted queries

        Standard - Whether the organisation has any drafts/applications'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - applications
  /applications/{id}/activity/:
    get:
      operationId: listActivitys
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - applications
  /applications/{id}/final-decision/:
    get:
      operationId: listApplicationFinalises
      description: Get goods to set licenced quantity for, with advice
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - applications
    put:
      operationId: updateApplicationFinalise
      description: Finalise an application
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - applications
  /applications/{id}/duration/:
    get:
      operationId: listApplicationDurations
      description: Retrieve default duration for an application.
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - applications
  /applications/{id}/goods/:
    get:
      operationId: listApplicationGoodsOnApplications
      description: Goods belonging to a standard application
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - applications
    post:
      operationId: createApplicationGoodsOnApplication
      description: Goods belonging to a standard application
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - applications
  /applications/good-on-application/{obj_pk}/:
    get:
      operationId: retrieveApplicationGoodOnApplication
      description: Good on a standard application.
      parameters:
      - name: obj_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - applications
    delete:
      operationId: destroyApplicationGoodOnApplication
      description: Good on a standard application.
      parameters:
      - name: obj_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - applications
  /applications/{id}/goods/{good_pk}/documents/:
    get:
      operationId: listApplicationGoodOnApplicationDocuments
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: good_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - applications
    post:
      operationId: createApplicationGoodOnApplicationDocument
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: good_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - applications
    delete:
      operationId: destroyApplicationGoodOnApplicationDocument
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: good_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - applications
  /applications/{id}/goods/{good_pk}/documents/{doc_pk}/:
    get:
      operationId: retrieveApplicationGoodOnApplicationDocumentDetail
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: good_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: doc_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - applications
    delete:
      operationId: destroyApplicationGoodOnApplicationDocumentDetail
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: good_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: doc_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - applications
  /applications/{id}/goodstypes/:
    get:
      operationId: listApplicationGoodsTypes
      description: Goodstypes belonging to an open application.
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - applications
    post:
      operationId: createApplicationGoodsTypes
      description: Post a goodstype
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - applications
  /applications/{id}/goodstype/{goodstype_pk}/:
    get:
      operationId: retrieveApplicationGoodsType
      description: Gets a goodstype
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: goodstype_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - applications
    delete:
      operationId: destroyApplicationGoodsType
      description: Deletes a goodstype
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: goodstype_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - applications
  /applications/{id}/goodstype/{goods_type_pk}/document/:
    get:
      operationId: listGoodsTypeDocuments
      description: Retrieve, add or delete a third party document from an application
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: goods_type_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - applications
    post:
      operationId: createGoodsTypeDocument
      description: Retrieve, add or delete a third party document from an application
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: goods_type_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - applications
    delete:
      operationId: destroyGoodsTypeDocument
      description: Retrieve, add or delete a third party document from an application
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: goods_type_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - applications
  /applications/{id}/parties/:
    get:
      operationId: listApplicationPartys
      description: Get parties for an application
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - applications
    post:
      operationId: createApplicationParty
      description: Add a party to an application
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - applications
    delete:
      operationId: destroyApplicationParty
      description: Removes a party from application.
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - applications
  /applications/{id}/parties/{party_pk}/:
    get:
      operationId: retrieveApplicationParty
      description: Get parties for an application
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: party_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - applications
    post:
      operationId: createApplicationParty
      description: Add a party to an application
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: party_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - applications
    delete:
      operationId: destroyApplicationParty
      description: Removes a party from application.
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: party_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - applications
  /applications/{id}/parties/{party_pk}/copy/:
    get:
      operationId: listCopyPartys
      description: Get parties for an application
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: party_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - applications
  /applications/{id}/parties/{party_pk}/document/:
    get:
      operationId: listPartyDocuments
      description: Retrieve, add or delete an end user document from an application
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: party_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - applications
    post:
      operationId: createPartyDocument
      description: Retrieve, add or delete an end user document from an application
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: party_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - applications
    delete:
      operationId: destroyPartyDocument
      description: Retrieve, add or delete an end user document from an application
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: party_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - applications
  /applications/{id}/sites/:
    get:
      operationId: listApplicationSites
      description: View sites belonging to an application or add them.
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - applications
    post:
      operationId: createApplicationSites
      description: View sites belonging to an application or add them.
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - applications
  /applications/{id}/countries-contract-types/:
    get:
      operationId: listLightCountries
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - applications
  /applications/{id}/external_locations/:
    get:
      operationId: listApplicationExternalLocations
      description: View sites belonging to a draft or add them.
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - applications
    post:
      operationId: createApplicationExternalLocations
      description: View sites belonging to a draft or add them.
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - applications
  /applications/{id}/countries/:
    get:
      operationId: listApplicationCountries
      description: View countries belonging to an open licence application
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - applications
    post:
      operationId: createApplicationCountries
      description: Add countries to an open licence application.
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - applications
  /applications/{id}/documents/:
    get:
      operationId: listApplicationDocuments
      description: View all additional documents on an application
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - applications
    post:
      operationId: createApplicationDocument
      description: Upload additional document onto an application
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - applications
  /applications/{id}/documents/{doc_pk}/:
    get:
      operationId: retrieveApplicationDocumentDetail
      description: View an additional document on an application
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: doc_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - applications
    delete:
      operationId: destroyApplicationDocumentDetail
      description: Delete an additional document on an application
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: doc_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - applications
  /applications/{id}/existing-parties/:
    get:
      operationId: listPartys
      description: 'Gets de-duplicated existing parties for a given organisation (extracted
        from the application)

        in a paginated format, where duplicate parties are parties that are copies
        of one another

        with the same name (i.e. the copy''s name hasn''t been changed from the original''s)


        Allows additional get params to be passed to filter the parties.

        Also adds __contains to the get params to make the result set include partial
        matches

        i.e. name=Abc becomes name__contains=Abc when in filter.

        Country is filtered by name (i.e. United Kingdom)'
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Party'
          description: ''
      tags:
      - applications
    post:
      operationId: createParty
      description: 'Gets de-duplicated existing parties for a given organisation (extracted
        from the application)

        in a paginated format, where duplicate parties are parties that are copies
        of one another

        with the same name (i.e. the copy''s name hasn''t been changed from the original''s)


        Allows additional get params to be passed to filter the parties.

        Also adds __contains to the get params to make the result set include partial
        matches

        i.e. name=Abc becomes name__contains=Abc when in filter.

        Country is filtered by name (i.e. United Kingdom)'
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Party'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Party'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Party'
          description: ''
      tags:
      - applications
  /applications/{id}/exhibition-details/:
    get:
      operationId: listBaseApplications
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this base application.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ExhibitionClearanceDetail'
          description: ''
      tags:
      - applications
    post:
      operationId: createBaseApplication
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this base application.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExhibitionClearanceDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExhibitionClearanceDetail'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExhibitionClearanceDetail'
          description: ''
      tags:
      - applications
  /applications/{id}/denial-matches/:
    get:
      operationId: listApplicationDenialMatchesOnApplications
      description: Denial matches belonging to a standard application
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - applications
    post:
      operationId: createApplicationDenialMatchesOnApplication
      description: Denial matches belonging to a standard application
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - applications
    delete:
      operationId: destroyApplicationDenialMatchesOnApplication
      description: Denial matches belonging to a standard application
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - applications
  /audit-trail/streams/{timestamp}:
    get:
      operationId: retrievestreams
      description: ''
      parameters:
      - name: timestamp
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - audit-trail
  /cases/enforcement-check/{queue_pk}/:
    get:
      operationId: retrieveEnforcementCheck
      description: Fetch enforcement check XML for cases on queue
      parameters:
      - name: queue_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - cases
    post:
      operationId: createEnforcementCheck
      description: ''
      parameters:
      - name: queue_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - cases
  /cases/destinations/{id}/:
    get:
      operationId: retrieveDestination
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - cases
  /cases/{id}/:
    get:
      operationId: retrieveCaseDetail
      description: Retrieve a case instance
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - cases
    patch:
      operationId: partialUpdateCaseDetail
      description: Change case status
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - cases
  /cases/{id}/case-notes/:
    get:
      operationId: listCaseNotes
      description: Gets all case notes.
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - cases
    post:
      operationId: createCaseNoteList
      description: Create a case note on a case.
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - cases
  /cases/{id}/activity/:
    get:
      operationId: listCaseActivitys
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - cases
  /cases/{id}/activity/filters/:
    get:
      operationId: listCaseActivityFilters
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - cases
  /cases/{id}/applicant/:
    get:
      operationId: listCaseApplicants
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - cases
  /cases/{id}/documents/:
    get:
      operationId: listCaseDocuments
      description: Returns a list of documents on the specified case
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - cases
    post:
      operationId: createCaseDocuments
      description: Adds a document to the specified case
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - cases
  /cases/{id}/documents/{s3_key}/:
    get:
      operationId: retrieveCaseDocumentDetail
      description: Returns a list of documents on the specified case
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: s3_key
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - cases
  /cases/{case_pk}/documents/{document_pk}/download/:
    get:
      operationId: listExporterCaseDocumentDownloads
      description: ''
      parameters:
      - name: case_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: document_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - cases
  /cases/{id}/team-advice/:
    get:
      operationId: listTeamAdvices
      description: Concatenates all advice for a case
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - cases
    post:
      operationId: createTeamAdvice
      description: Creates advice for a case
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - cases
    delete:
      operationId: destroyTeamAdvice
      description: Clears team level advice and reopens the advice for user level
        for that team
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - cases
  /cases/{id}/final-advice/:
    get:
      operationId: listFinalAdvices
      description: Concatenates all advice for a case and returns it or just returns
        if final advice already exists
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - cases
    post:
      operationId: createFinalAdvice
      description: Creates advice for a case
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - cases
    delete:
      operationId: destroyFinalAdvice
      description: Clears team level advice and reopens the advice for user level
        for that team
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - cases
  /cases/{id}/final-advice-documents/:
    get:
      operationId: listFinalAdviceDocuments
      description: Gets all advice types and any documents generated for those types
        of advice.
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - cases
  /cases/{id}/goods-countries-decisions/:
    get:
      operationId: listGoodsCountriesDecisions
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - cases
    post:
      operationId: createGoodsCountriesDecisions
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - cases
  /cases/{id}/open-licence-decision/:
    get:
      operationId: listOpenLicenceDecisions
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - cases
  /cases/{id}/ecju-queries/:
    get:
      operationId: listECJUQueries
      description: Returns the list of ECJU Queries on a case
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - cases
    post:
      operationId: createECJUQueries
      description: Add a new ECJU query
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - cases
  /cases/{id}/ecju-queries/{ecju_pk}/:
    get:
      operationId: retrieveEcjuQueryDetail
      description: Returns details of an ecju query
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: ecju_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - cases
    put:
      operationId: updateEcjuQueryDetail
      description: 'If not validate only Will update the ecju query instance, with
        a response, and return the data details.

        If validate only, this will return if the data is acceptable or not.'
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: ecju_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - cases
  /cases/{id}/ecju-queries/{query_pk}/document/:
    get:
      operationId: listEcjuQueryAddDocuments
      description: Returns a list of documents on the specified good
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: query_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - cases
    post:
      operationId: createEcjuQueryAddDocument
      description: Adds a document to the specified good
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: query_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - cases
  /cases/{id}/ecju-queries/{query_pk}/document/{doc_pk}/:
    get:
      operationId: retrieveEcjuQueryDocumentDetail
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: query_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: doc_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - cases
    delete:
      operationId: destroyEcjuQueryDocumentDetail
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: query_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: doc_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - cases
  /cases/{id}/generated-documents/:
    get:
      operationId: listGeneratedCaseDocumentExporters
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/GeneratedCaseDocumentExporter'
          description: ''
      tags:
      - cases
    post:
      operationId: createGeneratedCaseDocumentExporter
      description: Create a generated document
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeneratedCaseDocumentExporter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GeneratedCaseDocumentExporter'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneratedCaseDocumentExporter'
          description: ''
      tags:
      - cases
  /cases/{id}/generated-documents/{dpk}/:
    get:
      operationId: retrieveGeneratedCaseDocumentGov
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: dpk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneratedCaseDocumentGov'
          description: ''
      tags:
      - cases
  /cases/{id}/generated-documents/preview/:
    get:
      operationId: listGeneratedDocumentPreviews
      description: Get a preview of the document to be generated
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - cases
  /cases/{id}/licences/:
    get:
      operationId: listLicences
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - cases
  /cases/{id}/assigned-queues/:
    get:
      operationId: listAssignedQueues
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - cases
    put:
      operationId: updateAssignedQueues
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - cases
  /compliance/exporter/:
    get:
      operationId: listExporterComplianceSiteLists
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ExporterComplianceSiteList'
          description: ''
      tags:
      - compliance
  /compliance/exporter/{id}/:
    get:
      operationId: retrieveExporterComplianceSiteDetail
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExporterComplianceSiteDetail'
          description: ''
      tags:
      - compliance
  /compliance/exporter/{id}/visits/:
    get:
      operationId: listExporterComplianceVisitLists
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ExporterComplianceVisitList'
          description: ''
      tags:
      - compliance
  /compliance/{id}/licences/:
    get:
      operationId: listComplianceLicenceLists
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ComplianceLicenceList'
          description: ''
      tags:
      - compliance
  /compliance/site/{id}/visit/:
    get:
      operationId: listComplianceVisits
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ComplianceVisit'
          description: ''
      tags:
      - compliance
    post:
      operationId: createComplianceVisit
      description: Create a compliance visit case for a given compliance site case
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComplianceVisit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ComplianceVisit'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComplianceVisit'
          description: ''
      tags:
      - compliance
  /compliance/case/{id}/:
    get:
      operationId: retrieveComplianceCaseId
      description: 'This endpoint is currently only used for testing purposes.

        It gives us back the compliance case ids for the given case.'
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - compliance
  /compliance/visit/{id}/:
    get:
      operationId: retrieveComplianceVisitCase
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this compliance visit case.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComplianceVisit'
          description: ''
      tags:
      - compliance
    put:
      operationId: updateComplianceVisitCase
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this compliance visit case.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComplianceVisit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ComplianceVisit'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComplianceVisit'
          description: ''
      tags:
      - compliance
    patch:
      operationId: partialUpdateComplianceVisitCase
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this compliance visit case.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComplianceVisit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ComplianceVisit'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComplianceVisit'
          description: ''
      tags:
      - compliance
  /compliance/visit/{id}/people-present/:
    get:
      operationId: listCompliancePersons
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/CompliancePerson'
          description: ''
      tags:
      - compliance
    post:
      operationId: createCompliancePerson
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompliancePerson'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompliancePerson'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompliancePerson'
          description: ''
      tags:
      - compliance
  /compliance/visit/people-present/{id}/:
    get:
      operationId: retrieveCompliancePerson
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this compliance person.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompliancePerson'
          description: ''
      tags:
      - compliance
    put:
      operationId: updateCompliancePerson
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this compliance person.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompliancePerson'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompliancePerson'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompliancePerson'
          description: ''
      tags:
      - compliance
    patch:
      operationId: partialUpdateCompliancePerson
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this compliance person.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompliancePerson'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompliancePerson'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompliancePerson'
          description: ''
      tags:
      - compliance
    delete:
      operationId: destroyCompliancePerson
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this compliance person.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - compliance
  /compliance/open-licence-returns/:
    get:
      operationId: listOpenLicenceReturnsLists
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/OpenLicenceReturnsList'
          description: ''
      tags:
      - compliance
    post:
      operationId: createOpenLicenceReturnsList
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenLicenceReturnsList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OpenLicenceReturnsList'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenLicenceReturnsList'
          description: ''
      tags:
      - compliance
  /compliance/open-licence-returns/{id}/:
    get:
      operationId: retrieveOpenLicenceReturns
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this open licence returns.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenLicenceReturnsView'
          description: ''
      tags:
      - compliance
  /goods/:
    get:
      operationId: listGoodLists
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/GoodList'
          description: ''
      tags:
      - goods
    post:
      operationId: createGoodList
      description: Add a good to to an organisation.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoodList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GoodList'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodList'
          description: ''
      tags:
      - goods
  /goods/{id}/:
    get:
      operationId: retrieveGoodOverview
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - goods
    put:
      operationId: updateGoodOverview
      description: Edit details of a good. This includes description, control codes
        and PV grading.
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - goods
    delete:
      operationId: destroyGoodOverview
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - goods
  /goods/{id}/details/:
    get:
      operationId: listGoodTAUDetails
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - goods
    put:
      operationId: updateGoodTAUDetails
      description: Edit the TAU details of a good. This includes military use, component
        and information security use.
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - goods
  /goods/{id}/document-availability/:
    get:
      operationId: listGoodDocumentAvailabilityChecks
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - goods
    post:
      operationId: createGoodDocumentAvailabilityCheck
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - goods
  /goods/{id}/document-sensitivity/:
    get:
      operationId: listGoodDocumentCriteriaChecks
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - goods
    post:
      operationId: createGoodDocumentCriteriaCheck
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - goods
  /goods/{id}/documents/:
    get:
      operationId: listGoodDocuments
      description: Returns a list of documents on the specified good
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - goods
    post:
      operationId: createGoodDocuments
      description: Adds a document to the specified good
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - goods
  /goods/{id}/documents/{doc_pk}/:
    get:
      operationId: retrieveGoodDocumentDetail
      description: Returns a list of documents on the specified good
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: doc_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - goods
    delete:
      operationId: destroyGoodDocumentDetail
      description: Deletes good document
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: doc_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - goods
  /goods-types/{id}/:
    get:
      operationId: retrieveGoodsType
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this goods type.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsTypeView'
          description: ''
      tags:
      - goods-types
  /letter-templates/:
    get:
      operationId: listLetterTemplates
      description: Returns list of all letter templates or creates a letter template
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/LetterTemplate'
          description: ''
      tags:
      - letter-templates
    post:
      operationId: createLetterTemplate
      description: Returns list of all letter templates or creates a letter template
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LetterTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LetterTemplate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LetterTemplate'
          description: ''
      tags:
      - letter-templates
  /letter-templates/{id}/:
    get:
      operationId: retrieveLetterTemplate
      description: Returns detail of a specific letter template
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this letter template.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LetterTemplate'
          description: ''
      tags:
      - letter-templates
    put:
      operationId: updateLetterTemplate
      description: Returns detail of a specific letter template
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this letter template.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LetterTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LetterTemplate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LetterTemplate'
          description: ''
      tags:
      - letter-templates
    patch:
      operationId: partialUpdateLetterTemplate
      description: Returns detail of a specific letter template
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this letter template.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LetterTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LetterTemplate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LetterTemplate'
          description: ''
      tags:
      - letter-templates
  /organisations/:
    get:
      operationId: listOrganisationLists
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrganisationList'
          description: ''
      tags:
      - organisations
    post:
      operationId: createOrganisationList
      description: Create a new organisation.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationList'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationList'
          description: ''
      tags:
      - organisations
  /organisations/{id}/:
    get:
      operationId: retrieveOrganisation
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this organisation.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDetail'
          description: ''
      tags:
      - organisations
    put:
      operationId: updateOrganisation
      description: Edit details of an organisation.
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this organisation.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationDetail'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDetail'
          description: ''
      tags:
      - organisations
    patch:
      operationId: partialUpdateOrganisation
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this organisation.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationDetail'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDetail'
          description: ''
      tags:
      - organisations
  /organisations/{id}/matching_details/:
    get:
      operationId: listOrganisationsMatchingDetails
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - organisations
  /organisations/{org_pk}/users/:
    get:
      operationId: listOrganisationUserListViews
      description: ''
      parameters:
      - name: org_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrganisationUserListView'
          description: ''
      tags:
      - organisations
    post:
      operationId: createOrganisationUserListView
      description: Create an exporter user within the specified organisation
      parameters:
      - name: org_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationUserListView'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationUserListView'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationUserListView'
          description: ''
      tags:
      - organisations
  /organisations/{org_pk}/users/{user_pk}/:
    get:
      operationId: retrieveUserDetail
      description: Return a user from the specified organisation
      parameters:
      - name: org_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: user_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - organisations
    put:
      operationId: updateUserDetail
      description: Update the status of a user
      parameters:
      - name: org_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: user_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - organisations
  /organisations/{org_pk}/sites/:
    get:
      operationId: listSites
      description: 'Endpoint for listing the sites of an organisation

        filtered on whether or not the user belongs to the site'
      parameters:
      - name: org_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - organisations
    post:
      operationId: createSitesList
      description: List all sites for an organisation/create site
      parameters:
      - name: org_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - organisations
  /organisations/{org_pk}/sites/{id}/:
    get:
      operationId: retrieveSiteCreateUpdate
      description: ''
      parameters:
      - name: org_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteCreateUpdate'
          description: ''
      tags:
      - organisations
    put:
      operationId: updateSiteCreateUpdate
      description: ''
      parameters:
      - name: org_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SiteCreateUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteCreateUpdate'
          description: ''
      tags:
      - organisations
    patch:
      operationId: partialUpdateSiteCreateUpdate
      description: ''
      parameters:
      - name: org_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SiteCreateUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteCreateUpdate'
          description: ''
      tags:
      - organisations
  /organisations/{org_pk}/external_locations/:
    get:
      operationId: listExternalLocations
      description: ''
      parameters:
      - name: org_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - organisations
    post:
      operationId: createExternalLocationList
      description: ''
      parameters:
      - name: org_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - organisations
  /organisations/{org_pk}/roles/:
    get:
      operationId: listRoleLists
      description: ''
      parameters:
      - name: org_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/RoleList'
          description: ''
      tags:
      - organisations
    post:
      operationId: createRoleList
      description: Create a role
      parameters:
      - name: org_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoleList'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleList'
          description: ''
      tags:
      - organisations
  /organisations/{org_pk}/roles/{id}/:
    get:
      operationId: retrieveRoleDetail
      description: Get the details of a specific role
      parameters:
      - name: org_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - organisations
    put:
      operationId: updateRoleDetail
      description: update a role
      parameters:
      - name: org_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - organisations
  /organisations/permissions/:
    get:
      operationId: listPermissions
      description: Return list of all permissions
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - organisations
  /organisations/{id}/activity/:
    get:
      operationId: listOrganisationActivitys
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - organisations
  /organisations/{id}/sites-activity/:
    get:
      operationId: listSitesActivitys
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - organisations
  /organisations/{id}/documents/:
    get:
      operationId: listDocumentOnOrganisations
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/DocumentOnOrganisation'
          description: ''
      tags:
      - organisations
    post:
      operationId: createDocumentOnOrganisation
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentOnOrganisation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentOnOrganisation'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentOnOrganisation'
          description: ''
      tags:
      - organisations
  /organisations/{id}/document/{document_on_application_pk}/:
    get:
      operationId: retrieveDocumentOnOrganisation
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: document_on_application_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentOnOrganisation'
          description: ''
      tags:
      - organisations
  /queues/:
    get:
      operationId: listQueues
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/QueueList'
          description: ''
      tags:
      - queues
    post:
      operationId: createQueue
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueueList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QueueList'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueueList'
          description: ''
      tags:
      - queues
  /queues/{id}/:
    get:
      operationId: retrieveQueueDetail
      description: Retrieve a queue instance (be that a system queue or a team queue)
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - queues
    put:
      operationId: updateQueueDetail
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - queues
  /queues/{id}/case-assignments/:
    get:
      operationId: listCaseAssignments
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - queues
    put:
      operationId: updateCaseAssignments
      description: Assign users to cases on that queue
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - queues
  /static/case-types/:
    get:
      operationId: listCaseTypes
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - static
  /static/control-list-entries/:
    get:
      operationId: listControlListEntries
      description: Returns list of all Control List Entries
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - static
  /static/control-list-entries/{rating}/:
    get:
      operationId: retrieveControlListEntryDetail
      description: Returns details of a specific control ratings
      parameters:
      - name: rating
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - static
  /static/private-venture-gradings/:
    get:
      operationId: listPVGradings
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - static
  /static/private-venture-gradings/gov/:
    get:
      operationId: listGovPVGradings
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - static
  /static/countries/:
    get:
      operationId: listCountries
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - static
  /static/countries/{id}/:
    get:
      operationId: retrieveCountry
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this country.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
      tags:
      - static
  /static/f680-clearance-types/:
    get:
      operationId: listF680ClearanceTypes
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - static
  /static/decisions/:
    get:
      operationId: listDecisions
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - static
  /static/letter-layouts/:
    get:
      operationId: listLetterLayouts
      description: Returns list of all letter layouts
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/LetterLayout'
          description: ''
      tags:
      - static
  /static/letter-layouts/{id}/:
    get:
      operationId: retrieveLetterLayout
      description: Returns detail of a specific letter layout
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this letter layout.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LetterLayout'
          description: ''
      tags:
      - static
  /static/denial-reasons/:
    get:
      operationId: listDenialReasons
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - static
  /static/units/:
    get:
      operationId: listUnits
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - static
  /static/statuses/:
    get:
      operationId: listStatusesAs
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - static
  /static/statuses/properties/{status}/:
    get:
      operationId: retrieveStatusProperties
      description: Return is_read_only and is_terminal properties for a case status.
      parameters:
      - name: status
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - static
  /static/upload-document-for-tests/:
    get:
      operationId: listUploadDocumentForTests
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - static
  /static/missing-document-reasons/:
    get:
      operationId: listMissingDocumentReasons
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - static
  /static/item-types/:
    get:
      operationId: listGoodItemTypes
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - static
  /static/trade-control/activities/:
    get:
      operationId: listActivities
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - static
  /static/trade-control/product-categories/:
    get:
      operationId: listProductCategories
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - static
  /users/{id}/:
    get:
      operationId: retrieveUserDetail
      description: Get user from pk
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - users
    put:
      operationId: updateUserDetail
      description: Update Exporter user
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - users
  /users/me/:
    get:
      operationId: listUserMeDetails
      description: Get the user from request
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - users
  /users/notifications/:
    get:
      operationId: listExporterNotifications
      description: Count the number of application, eua_query and goods_query exporter
        user notifications
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - users
  /teams/:
    get:
      operationId: listTeams
      description: List all teams
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - teams
    post:
      operationId: createTeamList
      description: Create a new team
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - teams
  /teams/{id}/:
    get:
      operationId: retrieveTeamDetail
      description: Retrieve a team instance
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - teams
    put:
      operationId: updateTeamDetail
      description: Update a team instance
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - teams
  /teams/{id}/users/:
    get:
      operationId: listUsersByTeams
      description: Return a list of users by a specific team
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - teams
  /teams/{id}/queues/:
    get:
      operationId: listTinyQueues
      description: Returns all queues for a given team with their id and name
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/TinyQueue'
          description: ''
      tags:
      - teams
  /gov-users/:
    get:
      operationId: listGovUserViews
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/GovUserView'
          description: ''
      tags:
      - gov-users
    post:
      operationId: createGovUserView
      description: Add a new gov user
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GovUserView'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GovUserView'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GovUserView'
          description: ''
      tags:
      - gov-users
  /gov-users/{id}/:
    get:
      operationId: retrieveGovUserDetail
      description: Get user from pk
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - gov-users
    put:
      operationId: updateGovUserDetail
      description: Edit user from pk
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - gov-users
  /gov-users/roles/:
    get:
      operationId: listRolesViews
      description: Return list of all roles
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - gov-users
    post:
      operationId: createRolesViews
      description: Create a role
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - gov-users
  /gov-users/roles/{id}/:
    get:
      operationId: retrieveRoleDetail
      description: Get the details of a specific role
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - gov-users
    put:
      operationId: updateRoleDetail
      description: update a role
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - gov-users
  /gov-users/permissions/:
    get:
      operationId: listPermissions
      description: Return list of all permissions
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - gov-users
  /gov-users/me/:
    get:
      operationId: listUserMeDetails
      description: Get the user from request
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - gov-users
  /gov-users/notifications/:
    get:
      operationId: listNotifications
      description: Get notifications for a gov user (seen in the menu)
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - gov-users
  /flags/:
    get:
      operationId: listFlags
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Flag'
          description: ''
      tags:
      - flags
    post:
      operationId: createFlag
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Flag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Flag'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flag'
          description: ''
      tags:
      - flags
  /flags/{id}/:
    get:
      operationId: retrieveFlag
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flag'
          description: ''
      tags:
      - flags
    put:
      operationId: updateFlag
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Flag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Flag'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flag'
          description: ''
      tags:
      - flags
    patch:
      operationId: partialUpdateFlag
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Flag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Flag'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flag'
          description: ''
      tags:
      - flags
  /flags/rules/:
    get:
      operationId: listFlaggingRules
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/FlaggingRule'
          description: ''
      tags:
      - flags
    post:
      operationId: createFlaggingRule
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlaggingRule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlaggingRule'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlaggingRule'
          description: ''
      tags:
      - flags
  /flags/rules/{id}/:
    get:
      operationId: retrieveFlaggingRuleDetail
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - flags
    put:
      operationId: updateFlaggingRuleDetail
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - flags
  /picklist/:
    get:
      operationId: listPicklistLists
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/PicklistList'
          description: ''
      tags:
      - picklist
    post:
      operationId: createPicklistList
      description: Add a new picklist item
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PicklistList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PicklistList'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PicklistList'
          description: ''
      tags:
      - picklist
  /picklist/{id}/:
    get:
      operationId: retrievePicklistItemDetail
      description: Gets details of a specific picklist item
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - picklist
    put:
      operationId: updatePicklistItemDetail
      description: Edit status of a new picklist item
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - picklist
  /documents/{id}/:
    get:
      operationId: retrieveDocument
      description: Get information about a Document
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this document.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentView'
          description: ''
      tags:
      - documents
  /documents/certificate/:
    get:
      operationId: listDownloadSigningCertificates
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - documents
  /queries/end-user-advisories/:
    get:
      operationId: listEndUserAdvisoryLists
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/EndUserAdvisoryList'
          description: ''
      tags:
      - queries
    post:
      operationId: createEndUserAdvisoryList
      description: Create a new End User Advisory Enquiry query case instance
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndUserAdvisoryList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EndUserAdvisoryList'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndUserAdvisoryList'
          description: ''
      tags:
      - queries
  /queries/end-user-advisories/{id}/:
    get:
      operationId: retrieveEndUserAdvisoryDetail
      description: View a single end user advisory's details
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - queries
  /routing-rules/:
    get:
      operationId: listRoutingRules
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/RoutingRule'
          description: ''
      tags:
      - routing-rules
    post:
      operationId: createRoutingRule
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingRule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoutingRule'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingRule'
          description: ''
      tags:
      - routing-rules
  /routing-rules/{id}/:
    get:
      operationId: retrieveRoutingRule
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingRule'
          description: ''
      tags:
      - routing-rules
    put:
      operationId: updateRoutingRule
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingRule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoutingRule'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingRule'
          description: ''
      tags:
      - routing-rules
    patch:
      operationId: partialUpdateRoutingRule
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingRule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoutingRule'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingRule'
          description: ''
      tags:
      - routing-rules
  /licences/:
    get:
      operationId: listLicenceLists
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/LicenceList'
          description: ''
      tags:
      - licences
    post:
      operationId: createLicenceList
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LicenceList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LicenceList'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenceList'
          description: ''
      tags:
      - licences
  /licences/{id}/:
    get:
      operationId: retrieveLicence
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Licence'
          description: ''
      tags:
      - licences
  /licences/nlrs/:
    get:
      operationId: listNLRdocuments
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/NLRdocument'
          description: ''
      tags:
      - licences
  /open-general-licences/{id}/activity/:
    get:
      operationId: listOpenGeneralLicenceActivitys
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - open-general-licences
  /data-workspace/v1/licences/:
    get:
      operationId: listLicences
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/LicenceList'
          description: ''
      tags:
      - data-workspace
  /data-workspace/v1/licences/{id}/:
    get:
      operationId: retrieveLicence
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this licence.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenceList'
          description: ''
      tags:
      - data-workspace
  /data-workspace/v1/ogl/:
    get:
      operationId: listOpenGeneralLicences
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/OpenGeneralLicence'
          description: ''
      tags:
      - data-workspace
  /data-workspace/v1/ogl/{id}/:
    get:
      operationId: retrieveOpenGeneralLicence
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this open general licence.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenGeneralLicence'
          description: ''
      tags:
      - data-workspace
  /external-data/denial/:
    get:
      operationId: listDenials
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Denial'
          description: ''
      tags:
      - external-data
    post:
      operationId: createDenial
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DenialFromCSVFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DenialFromCSVFile'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DenialFromCSVFile'
          description: ''
      tags:
      - external-data
  /external-data/denial/{id}/:
    get:
      operationId: retrieveDenial
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this denial.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Denial'
          description: ''
      tags:
      - external-data
    put:
      operationId: updateDenial
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this denial.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Denial'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Denial'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Denial'
          description: ''
      tags:
      - external-data
    patch:
      operationId: partialUpdateDenial
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this denial.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Denial'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Denial'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Denial'
          description: ''
      tags:
      - external-data
    delete:
      operationId: destroyDenial
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this denial.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - external-data
  /external-data/sanction/:
    get:
      operationId: listSanctionMatchs
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/SanctionMatch'
          description: ''
      tags:
      - external-data
    post:
      operationId: createSanctionMatch
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SanctionMatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SanctionMatch'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SanctionMatch'
          description: ''
      tags:
      - external-data
  /external-data/sanction/{id}/:
    get:
      operationId: retrieveSanctionMatch
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this sanction match.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SanctionMatch'
          description: ''
      tags:
      - external-data
    put:
      operationId: updateSanctionMatch
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this sanction match.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SanctionMatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SanctionMatch'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SanctionMatch'
          description: ''
      tags:
      - external-data
    patch:
      operationId: partialUpdateSanctionMatch
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this sanction match.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SanctionMatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SanctionMatch'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SanctionMatch'
          description: ''
      tags:
      - external-data
    delete:
      operationId: destroySanctionMatch
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this sanction match.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - external-data
  /external-data/denial-search/:
    get:
      operationId: listDenialSearchs
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/DenialSearch'
          description: ''
      tags:
      - external-data
  /external-data/denial-search/functional_suggest/:
    get:
      operationId: functionalSuggestDenialSearch
      description: 'Functional suggest functionality.


        :param request:

        :return:'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DenialSearch'
          description: ''
      tags:
      - external-data
  /external-data/denial-search/suggest/:
    get:
      operationId: suggestDenialSearch
      description: Suggest functionality.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DenialSearch'
          description: ''
      tags:
      - external-data
  /external-data/denial-search/{id}/:
    get:
      operationId: retrieveDenialSearch
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DenialSearch'
          description: ''
      tags:
      - external-data
  /external-data/sanction-search:
    get:
      operationId: listSanctionSearchs
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - external-data
  /search/application/search/:
    get:
      operationId: listApplicationDocuments
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ApplicationDocument'
          description: ''
      tags:
      - search
  /search/application/search/functional_suggest/:
    get:
      operationId: functionalSuggestApplicationDocument
      description: 'Functional suggest functionality.


        :param request:

        :return:'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationDocument'
          description: ''
      tags:
      - search
  /search/application/search/suggest/:
    get:
      operationId: suggestApplicationDocument
      description: Suggest functionality.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationDocument'
          description: ''
      tags:
      - search
  /search/application/search/{id}/:
    get:
      operationId: retrieveApplicationDocument
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationDocument'
          description: ''
      tags:
      - search
  /search/application/suggest/:
    get:
      operationId: listApplicationSuggestDocuments
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - search
  /search/product/search/:
    get:
      operationId: listProductDocuments
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductDocument'
          description: ''
      tags:
      - search
  /search/product/search/functional_suggest/:
    get:
      operationId: functionalSuggestProductDocument
      description: 'Functional suggest functionality.


        :param request:

        :return:'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDocument'
          description: ''
      tags:
      - search
  /search/product/search/suggest/:
    get:
      operationId: suggestProductDocument
      description: Suggest functionality.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDocument'
          description: ''
      tags:
      - search
  /search/product/search/{id}/:
    get:
      operationId: retrieveProductDocument
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDocument'
          description: ''
      tags:
      - search
  /search/product/suggest/:
    get:
      operationId: listProductSuggestDocuments
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - search
  /search/product/spire/{id}/:
    get:
      operationId: retrieveRetrieveSpireProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - search
  /search/product/lite/{id}/:
    get:
      operationId: retrieveRetrieveLiteProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - search
  /search/product/more-like-this/{id}/:
    get:
      operationId: retrieveMoreLikeThis
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - search
  /applications/{id}/copy/:
    post:
      operationId: createApplicationCopy
      description: 'Copy an application

        In this function we get the application and remove it''s relation to itself
        on the database, which allows for us

        keep most of the data in relation to the application intact.'
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - applications
  /cases/{id}/user-advice/:
    post:
      operationId: createUserAdvice
      description: Creates advice for a case
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - cases
  /cases/{id}/reissue-ogl/:
    post:
      operationId: createOpenGeneralLicenceReissue
      description: Reissue an open general licence
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - cases
  /users/:
    post:
      operationId: createCreateUser
      description: Create Exporter within the same organisation that current user
        is logged into
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - users
  /users/authenticate/:
    post:
      operationId: createAuthenticateExporterUser
      description: 'Takes user details from sso and checks them against our whitelisted
        users

        Returns a token which is just our ID for the user'
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - users
  /gov-users/authenticate/:
    post:
      operationId: createAuthenticateGovUser
      description: 'Takes user details from sso and checks them against our whitelisted
        users

        Returns a token which is just our ID for the user

        :param request:

        :param email, first_name, last_name:

        :return token:'
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - gov-users
  /queries/goods-queries/:
    post:
      operationId: createGoodsQueries
      description: Create a new GoodsQuery case instance
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - queries
  /licences/open-general-licences/:
    post:
      operationId: create
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - licences
  /search/product/spire/{id}/comment/:
    post:
      operationId: createComment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
      tags:
      - search
  /search/product/lite/{id}/comment/:
    post:
      operationId: createComment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
      tags:
      - search
  /applications/{id}/route-of-goods/:
    put:
      operationId: updateApplicationRouteOfGoods
      description: Update an application instance with route of goods data.
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - applications
    patch:
      operationId: partialUpdateApplicationRouteOfGoods
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - applications
  /applications/{id}/submit/:
    put:
      operationId: updateApplicationSubmission
      description: 'Submit a draft application which will set its submitted_at datetime
        and status before creating a case

        Depending on the application subtype, this will also submit the declaration
        of the licence'
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - applications
  /applications/{id}/status/:
    put:
      operationId: updateApplicationManageStatus
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - applications
  /applications/{id}/end-use-details/:
    put:
      operationId: updateEndUseDetails
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - applications
    patch:
      operationId: partialUpdateEndUseDetails
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - applications
  /applications/{id}/temporary-export-details/:
    put:
      operationId: updateTemporaryExportDetails
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - applications
    patch:
      operationId: partialUpdateTemporaryExportDetails
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - applications
  /applications/{id}/goodstype/assign-countries/:
    put:
      operationId: updateApplicationGoodsTypeCountries
      description: Sets countries on goodstype
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - applications
  /applications/{id}/contract-types/:
    put:
      operationId: updateApplicationContractTypes
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - applications
  /cases/{id}/queues/:
    put:
      operationId: updateSetQueues
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - cases
  /cases/{id}/case-officer/:
    put:
      operationId: updateCaseOfficer
      description: Assigns a gov user to be the case officer for a case
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - cases
    delete:
      operationId: destroyCaseOfficer
      description: Removes the case officer currently assigned to a case off of it.
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - cases
  /cases/{id}/finalise/:
    put:
      operationId: updateFinalise
      description: Finalise & grant a Licence
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - cases
    patch:
      operationId: partialUpdateFinalise
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - cases
  /cases/{id}/rerun-routing-rules/:
    put:
      operationId: updateRerunRoutingRules
      description: "Reruns routing rules against a given case, in turn removing all\
        \ existing queues, and user assignments,\n    and starting again from scratch\
        \ on the given status\nAudits who requests the rules to be rerun"
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - cases
  /cases/{id}/review-date/:
    put:
      operationId: updateNextReviewDate
      description: Sets a next review date for a case
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - cases
  /organisations/{id}/status/:
    put:
      operationId: updateOrganisationStatusUpdate
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationStatusUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationStatusUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationStatusUpdate'
          description: ''
      tags:
      - organisations
    patch:
      operationId: partialUpdateOrganisationStatusUpdate
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationStatusUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationStatusUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationStatusUpdate'
          description: ''
      tags:
      - organisations
  /users/{id}/sites/:
    put:
      operationId: updateAssignSites
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - users
    patch:
      operationId: partialUpdateAssignSites
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - users
  /flags/assign/:
    put:
      operationId: updateAssignFlags
      description: Assigns flags to goods and cases
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - flags
  /queries/goods-queries/{id}/clc-response/:
    put:
      operationId: updateGoodQueryCLCResponse
      description: Respond to a control list classification.
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - queries
  /queries/goods-queries/{id}/pv-grading-response/:
    put:
      operationId: updateGoodQueryPVGradingResponse
      description: Respond to a control list classification.
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - queries
  /routing-rules/{id}/status/:
    put:
      operationId: updateRoutingRulesActiveStatus
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - routing-rules
  /licences/hmrc-integration/:
    put:
      operationId: updateHMRCIntegration
      description: Update Good Usages for a batch of Licences
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - licences
    patch:
      operationId: partialUpdateHMRCIntegration
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - licences
  /applications/{id}/external_locations/{ext_loc_pk}/:
    delete:
      operationId: destroyApplicationRemoveExternalLocation
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: ext_loc_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - applications
components:
  schemas:
    GenericApplicationList:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        case_type:
          type: object
          properties:
            sub_type:
              type: string
          required:
          - sub_type
        status:
          type: string
          readOnly: true
        updated_at:
          type: string
          format: date-time
        reference_code:
          type: string
        export_type:
          type: string
          readOnly: true
      required:
      - id
      - name
      - case_type
      - updated_at
      - reference_code
    Party:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        address:
          type: string
        country:
          type: string
        website:
          type: string
        signatory_name_euu:
          type: string
        type:
          enum:
          - consignee
          - end_user
          - ultimate_end_user
          - third_party
          - additional_contact
          type: string
        organisation:
          type: string
        document:
          type: string
          readOnly: true
        sub_type:
          type: string
        sub_type_other:
          type: string
          nullable: true
          maxLength: 75
        role:
          type: string
        role_other:
          type: string
          nullable: true
          maxLength: 75
        flags:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                readOnly: true
              name:
                type: string
                maxLength: 25
              level:
                enum:
                - Case
                - Organisation
                - Good
                - Destination
                - PartyOnApplication
                type: string
              team:
                type: string
              status:
                enum:
                - Active
                - Deactivated
                type: string
                default: Active
              label:
                type: string
                maxLength: 15
              colour:
                enum:
                - default
                - red
                - yellow
                - green
                - blue
                - purple
                - orange
                - brown
                - turquoise
                - pink
                type: string
                default: default
              priority:
                type: integer
                maximum: 100
                default: 0
                minimum: 0
              blocks_approval:
                type: boolean
            required:
            - name
            - level
            - team
            - blocks_approval
        copy_of:
          type: string
          nullable: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        clearance_level:
          type: string
          nullable: true
        descriptors:
          type: string
          nullable: true
      required:
      - name
      - address
      - country
      - signatory_name_euu
      - type
      - organisation
      - sub_type
    ExhibitionClearanceDetail:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        first_exhibition_date:
          type: string
          format: date
        required_by_date:
          type: string
          format: date
        reason_for_clearance:
          type: string
          nullable: true
          maxLength: 2000
      required:
      - title
      - first_exhibition_date
      - required_by_date
    GeneratedCaseDocumentExporter:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 1000
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - name
    GeneratedCaseDocumentGov:
      type: object
      properties:
        template:
          type: string
        text:
          type: string
      required:
      - template
    ExporterComplianceSiteList:
      type: object
      properties:
        id:
          type: string
          format: uuid
        reference_code:
          type: string
        site_name:
          type: string
        address:
          type: object
          properties:
            id:
              type: string
              format: uuid
              readOnly: true
            address:
              type: string
              maxLength: 256
            address_line_1:
              type: string
              maxLength: 50
            address_line_2:
              type: string
              nullable: true
              maxLength: 50
            city:
              type: string
              maxLength: 50
            region:
              type: string
              maxLength: 50
            postcode:
              type: string
              maxLength: 10
            country:
              type: string
        review_date:
          type: string
          readOnly: true
      required:
      - id
      - reference_code
      - site_name
      - address
    ExporterComplianceSiteDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
        reference_code:
          type: string
        site_name:
          type: string
        address:
          type: object
          properties:
            id:
              type: string
              format: uuid
              readOnly: true
            address:
              type: string
              maxLength: 256
            address_line_1:
              type: string
              maxLength: 50
            address_line_2:
              type: string
              nullable: true
              maxLength: 50
            city:
              type: string
              maxLength: 50
            region:
              type: string
              maxLength: 50
            postcode:
              type: string
              maxLength: 10
            country:
              type: string
        visit_date:
          type: string
          readOnly: true
        exporter_user_notification_count:
          type: string
          readOnly: true
        is_primary_site:
          type: string
          readOnly: true
      required:
      - id
      - reference_code
      - site_name
      - address
    ExporterComplianceVisitList:
      type: object
      properties:
        id:
          type: string
          format: uuid
        reference_code:
          type: string
        visit_date:
          type: string
          format: date
        case_officer_first_name:
          type: string
        case_officer_last_name:
          type: string
      required:
      - id
      - reference_code
      - visit_date
    ComplianceLicenceList:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        case_type:
          type: string
          readOnly: true
        reference_code:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        flags:
          type: string
          readOnly: true
    ComplianceVisit:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        site_case_id:
          type: string
          readOnly: true
        site_case_reference_code:
          type: string
        site_name:
          type: string
        address:
          type: object
          properties:
            id:
              type: string
              format: uuid
              readOnly: true
            address:
              type: string
              maxLength: 256
            address_line_1:
              type: string
              maxLength: 50
            address_line_2:
              type: string
              nullable: true
              maxLength: 50
            city:
              type: string
              maxLength: 50
            region:
              type: string
              maxLength: 50
            postcode:
              type: string
              maxLength: 10
            country:
              type: string
        status:
          type: string
          readOnly: true
        organisation:
          type: string
        site_case:
          type: string
        visit_type:
          type: string
        visit_date:
          type: string
          format: date
          nullable: true
        overall_risk_value:
          type: string
        licence_risk_value:
          type: integer
          maximum: 5
          minimum: 1
          nullable: true
        overview:
          type: string
          maxLength: 750
        inspection:
          type: string
          maxLength: 750
        compliance_overview:
          type: string
          maxLength: 750
        compliance_risk_value:
          type: string
        individuals_overview:
          type: string
          maxLength: 750
        individuals_risk_value:
          type: string
        products_overview:
          type: string
          maxLength: 750
        products_risk_value:
          type: string
        people_present:
          type: string
          readOnly: true
      required:
      - site_case_reference_code
      - site_name
      - address
      - organisation
      - site_case
      - visit_type
      - visit_date
      - overall_risk_value
      - licence_risk_value
      - overview
      - inspection
      - compliance_overview
      - compliance_risk_value
      - individuals_overview
      - individuals_risk_value
      - products_overview
      - products_risk_value
    CompliancePerson:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        job_title:
          type: string
          maxLength: 100
      required:
      - name
      - job_title
    OpenLicenceReturnsList:
      type: object
      properties:
        id:
          type: string
          format: uuid
        year:
          type: integer
        created_at:
          type: string
          format: date-time
      required:
      - id
      - year
      - created_at
    OpenLicenceReturnsView:
      type: object
      properties:
        id:
          type: string
          format: uuid
        year:
          type: integer
        created_at:
          type: string
          format: date-time
        returns_data:
          type: string
      required:
      - id
      - year
      - created_at
      - returns_data
    GoodList:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        control_list_entries:
          type: array
          items:
            type: object
            properties:
              rating:
                type: string
                readOnly: true
              text:
                type: string
                readOnly: true
          nullable: true
        part_number:
          type: string
        status:
          type: string
      required:
      - id
      - name
      - description
      - control_list_entries
      - part_number
      - status
    GoodsTypeView:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        description:
          type: string
          readOnly: true
        is_good_controlled:
          enum:
          - true
          - false
          - null
        is_good_incorporated:
          type: boolean
          readOnly: true
        control_list_entries:
          type: array
          items:
            type: object
            properties:
              rating:
                type: string
                readOnly: true
              text:
                type: string
                readOnly: true
          readOnly: true
        countries:
          type: string
          readOnly: true
        document:
          type: string
          readOnly: true
        flags:
          type: string
          readOnly: true
        comment:
          type: string
        report_summary:
          type: string
        end_use_control:
          type: array
          items:
            type: string
      required:
      - is_good_controlled
      - comment
    LetterTemplate:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 35
        letter_paragraphs:
          type: array
          items:
            type: string
        case_types:
          type: array
          items:
            type: string
        layout:
          type: string
        decisions:
          type: array
          items:
            type: string
        visible_to_exporter:
          type: boolean
        include_digital_signature:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - name
      - letter_paragraphs
      - case_types
      - layout
      - visible_to_exporter
      - include_digital_signature
    OrganisationList:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        sic_number:
          type: string
          nullable: true
        eori_number:
          type: string
          nullable: true
        type:
          type: string
        status:
          type: string
        registration_number:
          type: string
          nullable: true
        vat_number:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - type
      - status
    OrganisationDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        primary_site:
          type: string
        type:
          type: string
        flags:
          type: string
          readOnly: true
        status:
          type: string
        documents:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
        eori_number:
          type: string
          nullable: true
        sic_number:
          type: string
          nullable: true
        vat_number:
          type: string
          nullable: true
        registration_number:
          type: string
          nullable: true
      required:
      - primary_site
      - type
      - status
    OrganisationUserListView:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        email:
          type: string
          readOnly: true
        role_name:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
    SiteCreateUpdate:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          writeOnly: true
        address:
          type: object
          properties:
            id:
              type: string
              format: uuid
              readOnly: true
            address:
              type: string
              maxLength: 256
            address_line_1:
              type: string
              maxLength: 50
            address_line_2:
              type: string
              nullable: true
              maxLength: 50
            city:
              type: string
              maxLength: 50
            region:
              type: string
              maxLength: 50
            postcode:
              type: string
              maxLength: 10
            country:
              type: string
        organisation:
          type: string
        users:
          type: array
          items:
            type: string
        site_records_located_at:
          type: string
      required:
      - name
      - address
    RoleList:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        permissions:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - id
      - name
    DocumentOnOrganisation:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        document:
          type: object
          properties:
            id:
              type: string
              format: uuid
              readOnly: true
            name:
              type: string
              maxLength: 1000
            s3_key:
              type: string
              maxLength: 1000
            size:
              type: integer
              maximum: 2147483647
              minimum: -2147483648
              nullable: true
            created_at:
              type: string
              format: date-time
              readOnly: true
            safe:
              type: boolean
              readOnly: true
          required:
          - name
        expiry_date:
          type: string
          format: date
          description: Date the document is no longer valid
        document_type:
          enum:
          - section-one-certificate
          - section-two-certificate
          - section-five-certificate
          - rfd-certificate
          type: string
        organisation:
          type: string
          readOnly: true
        is_expired:
          type: string
          readOnly: true
        reference_code:
          type: string
      required:
      - document
      - expiry_date
      - document_type
      - reference_code
    QueueList:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          readOnly: true
        team:
          type: object
          properties:
            id:
              type: string
              format: uuid
              readOnly: true
            name:
              type: string
              readOnly: true
          readOnly: true
        countersigning_queue:
          type: object
          properties:
            id:
              type: string
              format: uuid
              readOnly: true
            name:
              type: string
          readOnly: true
    Country:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        type:
          type: string
          maxLength: 100
        is_eu:
          type: boolean
      required:
      - name
      - type
      - is_eu
    LetterLayout:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        filename:
          type: string
        name:
          type: string
      required:
      - filename
      - name
    TinyQueue:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
    GovUserView:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        email:
          type: string
          readOnly: true
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        status:
          enum:
          - Active
          - Deactivated
          type: string
        team:
          type: object
          properties:
            id:
              type: string
              format: uuid
              readOnly: true
            name:
              type: string
              maxLength: 50
          required:
          - name
        role:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
            permissions:
              type: array
              items:
                type: string
              readOnly: true
            statuses:
              type: array
              items:
                type: string
          required:
          - id
          - name
        default_queue:
          type: string
          readOnly: true
      required:
      - team
      - role
    Flag:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 25
        level:
          enum:
          - Case
          - Organisation
          - Good
          - Destination
          - PartyOnApplication
          type: string
        team:
          type: string
        status:
          enum:
          - Active
          - Deactivated
          type: string
          default: Active
        label:
          type: string
          maxLength: 15
        colour:
          enum:
          - default
          - red
          - yellow
          - green
          - blue
          - purple
          - orange
          - brown
          - turquoise
          - pink
          type: string
          default: default
        priority:
          type: integer
          maximum: 100
          default: 0
          minimum: 0
        blocks_approval:
          type: boolean
      required:
      - name
      - level
      - team
      - blocks_approval
    FlaggingRule:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        team:
          type: string
        level:
          enum:
          - Case
          - Organisation
          - Good
          - Destination
          - PartyOnApplication
          type: string
        flag:
          type: string
        status:
          enum:
          - Active
          - Deactivated
          type: string
          default: Active
        matching_values:
          type: array
          items:
            type: string
        matching_groups:
          type: array
          items:
            type: string
        excluded_values:
          type: array
          items:
            type: string
        is_for_verified_goods_only:
          type: boolean
          nullable: true
      required:
      - team
      - level
      - flag
    PicklistList:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          readOnly: true
        text:
          type: string
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        team:
          type: object
          properties:
            id:
              type: string
              format: uuid
              readOnly: true
            name:
              type: string
              readOnly: true
          readOnly: true
        type:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
    DocumentView:
      type: object
      properties:
        name:
          type: string
          maxLength: 1000
        s3_key:
          type: string
          readOnly: true
        size:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        safe:
          type: boolean
          nullable: true
      required:
      - name
    EndUserAdvisoryList:
      type: object
      properties:
        id:
          type: string
          format: uuid
        end_user:
          type: object
          properties:
            name:
              type: string
            address:
              type: string
            country:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
            website:
              type: string
            sub_type:
              type: string
          required:
          - name
          - address
          - country
          - website
          - sub_type
        reference_code:
          type: string
      required:
      - id
      - end_user
      - reference_code
    RoutingRule:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        team:
          type: string
        queue:
          type: string
        status:
          type: string
        tier:
          type: integer
          maximum: 32000
          minimum: 1
        user:
          type: string
          nullable: true
        case_types:
          type: array
          items:
            type: string
        country:
          type: string
          nullable: true
        flags_to_include:
          type: array
          items:
            type: string
        flags_to_exclude:
          type: array
          items:
            type: string
        additional_rules:
          type: array
          items:
            enum:
            - users
            - case_types
            - flags
            - country
            type: string
        active:
          type: boolean
      required:
      - team
      - queue
      - status
      - tier
    LicenceList:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        reference_code:
          type: string
          readOnly: true
        status:
          type: string
        application:
          type: object
          properties:
            id:
              type: string
              format: uuid
              readOnly: true
            name:
              type: string
              readOnly: true
            destinations:
              type: string
              readOnly: true
            documents:
              type: string
              readOnly: true
        goods:
          type: string
          readOnly: true
      required:
      - status
      - application
    Licence:
      type: object
      properties:
        application:
          type: object
          properties:
            id:
              type: string
              format: uuid
              readOnly: true
            case_type:
              type: object
              properties:
                sub_type:
                  type: string
              required:
              - sub_type
            name:
              type: string
              readOnly: true
            destinations:
              type: string
              readOnly: true
            end_user:
              type: object
              properties:
                party:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      readOnly: true
                    name:
                      type: string
                    address:
                      type: string
                    country:
                      type: string
                    document:
                      type: string
                      readOnly: true
                    role:
                      type: string
                  required:
                  - name
                  - address
                  - country
                  - role
              required:
              - party
            ultimate_end_users:
              type: array
              items:
                type: object
                properties:
                  party:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        readOnly: true
                      name:
                        type: string
                      address:
                        type: string
                      country:
                        type: string
                      document:
                        type: string
                        readOnly: true
                      role:
                        type: string
                    required:
                    - name
                    - address
                    - country
                    - role
                required:
                - party
            consignee:
              type: object
              properties:
                party:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      readOnly: true
                    name:
                      type: string
                    address:
                      type: string
                    country:
                      type: string
                    document:
                      type: string
                      readOnly: true
                    role:
                      type: string
                  required:
                  - name
                  - address
                  - country
                  - role
              required:
              - party
            third_parties:
              type: array
              items:
                type: object
                properties:
                  party:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        readOnly: true
                      name:
                        type: string
                      address:
                        type: string
                      country:
                        type: string
                      document:
                        type: string
                        readOnly: true
                      role:
                        type: string
                    required:
                    - name
                    - address
                    - country
                    - role
                required:
                - party
            documents:
              type: string
              readOnly: true
          required:
          - case_type
          - end_user
          - ultimate_end_users
          - consignee
          - third_parties
        reference_code:
          type: string
          readOnly: true
        status:
          type: string
        start_date:
          type: string
          format: date
          readOnly: true
        duration:
          type: integer
          readOnly: true
        goods:
          type: string
          readOnly: true
        document:
          type: string
          readOnly: true
      required:
      - application
      - status
    NLRdocument:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 1000
        case_id:
          type: string
          readOnly: true
        case_reference:
          type: string
        goods:
          type: string
          readOnly: true
        destinations:
          type: string
          readOnly: true
        advice_type:
          enum:
          - approve
          - proviso
          - refuse
          - no_licence_required
          - not_applicable
          - conflicting
          type: string
          nullable: true
      required:
      - name
      - case_reference
    OpenGeneralLicence:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 250
        description:
          type: string
        url:
          type: string
          format: uri
          pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:25[0-5]|2[0-4]\\\
            d|[0-1]?\\d?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}|\\[[0-9a-f:.]+\\\
            ]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1-\uFFFF0-9])?(?:\\\
            .(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1-\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\\
            .?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
        case_type:
          type: string
        countries:
          type: array
          items:
            type: string
        control_list_entries:
          type: array
          items:
            type: string
        registration_required:
          type: boolean
        status:
          type: string
        registrations:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - name
      - description
      - url
      - case_type
      - countries
      - control_list_entries
      - registration_required
    Denial:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_by:
          type: string
        name:
          type: string
          description: The name of the individual/organization being denied
        address:
          type: string
          description: The address of the individual/organization being denied
        reference:
          type: string
          description: The reference assigned by the notifying government
        notifying_government:
          type: string
          description: The authority that raised the denial
        final_destination:
          type: string
        item_list_codes:
          type: string
        item_description:
          type: string
        consignee_name:
          type: string
        end_use:
          type: string
        data:
          type: object
        is_revoked:
          type: boolean
          description: If true do not include in search results
        is_revoked_comment:
          type: string
      required:
      - created_by
      - name
      - address
      - reference
      - notifying_government
      - final_destination
      - item_list_codes
      - item_description
      - consignee_name
      - end_use
    SanctionMatch:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        list_name:
          type: string
          readOnly: true
        elasticsearch_reference:
          type: string
        is_revoked:
          type: boolean
          description: If true do not include in search results
        is_revoked_comment:
          type: string
      required:
      - name
      - elasticsearch_reference
    DenialSearch:
      type: object
      properties: {}
    ApplicationDocument:
      type: object
      properties:
        id:
          type: string
        queues:
          type: string
        name:
          type: string
        reference_code:
          type: string
        organisation:
          type: string
        status:
          type: string
        case_type:
          type: string
        case_subtype:
          type: string
        submitted_by:
          type: string
        created:
          type: string
          readOnly: true
        updated:
          type: string
          readOnly: true
        case_officer:
          type: string
        goods:
          type: string
        parties:
          type: string
        highlight:
          type: string
          readOnly: true
        index:
          type: string
          readOnly: true
        score:
          type: string
          readOnly: true
      required:
      - id
      - reference_code
      - organisation
      - status
      - goods
      - parties
    ProductDocument:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          nullable: true
        description:
          type: string
        control_list_entries:
          type: string
        highlight:
          type: string
          readOnly: true
        destination:
          type: string
        organisation:
          type: string
        end_use:
          type: string
        canonical_name:
          type: string
        application:
          type: string
        date:
          type: string
          readOnly: true
        rating_comment:
          type: string
        report_summary:
          type: string
        part_number:
          type: string
        queues:
          type: string
        inner_hits:
          type: string
          readOnly: true
        index:
          type: string
          readOnly: true
        score:
          type: string
          readOnly: true
      required:
      - description
      - control_list_entries
      - destination
      - organisation
      - end_use
      - application
      - rating_comment
      - report_summary
      - part_number
    DenialFromCSVFile:
      type: object
      properties:
        csv_file:
          type: string
      required:
      - csv_file
    Comment:
      type: object
      properties:
        user:
          type: object
          properties:
            id:
              type: string
              readOnly: true
            first_name:
              type: string
              readOnly: true
            last_name:
              type: string
              readOnly: true
            email:
              type: string
              readOnly: true
            team:
              type: string
              readOnly: true
          readOnly: true
        text:
          type: string
        object_pk:
          type: string
          description: The LITE or SPIRE product pk. Not the pk of this model instance
        source:
          enum:
          - SPIRE
          - LITE
          type: string
          description: Is the product from LITE or SPIRE?
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - text
      - source
    OrganisationStatusUpdate:
      type: object
      properties:
        status:
          type: string
      required:
      - status
