# Generated by Django 4.2.19 on 2025-03-11 12:20

import contextlib
import logging

from django.db import (
    migrations,
    transaction,
)


logger = logging.getLogger(__name__)


class IncorrectDeletion(Exception):
    pass


def deleted_unused_applications(apps, schema_editor):
    Case = apps.get_model("cases", "Case")

    applications_to_delete = Case.objects.exclude(
        case_type__type="application",
    )
    if applications_to_delete.count() != 2:
        logger.warning("Found %s cases instead of 2. Not deleting.", applications_to_delete.count())
        return

    with contextlib.suppress(IncorrectDeletion):
        with transaction.atomic():
            deleted = applications_to_delete.delete()
            if deleted != (
                6,
                {
                    "cases.Case_flags": 1,
                    "compliance.ComplianceSiteCase": 1,
                    "goods_query.GoodsQuery": 1,
                    "queries.Query": 1,
                    "cases.Case": 2,
                },
            ):
                logger.warning("Deleted an unexpected number of objects and rolling back: %s", deleted)
                raise IncorrectDeletion("Deleted an unexpected number of objects")

    logger.info("Deleted %s", deleted)


class Migration(migrations.Migration):

    dependencies = [
        ("cases", "0079_licencedecision_cases_licen_created_850df1_idx"),
        ("goods_query", "0001_squashed_0002_goodsquery_clc_control_list_entry"),
    ]

    operations = [
        migrations.RunPython(deleted_unused_applications, migrations.RunPython.noop),
    ]
