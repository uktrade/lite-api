# Generated by Django 4.2.13 on 2024-05-20 15:32

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import uuid


def populate_base_advice(apps, schema_editor):
    BaseAdvice = apps.get_model("cases", "BaseAdvice")
    Advice = apps.get_model("cases", "Advice")

    all_advice = Advice.objects.all()
    for advice in all_advice:
        base_advice = BaseAdvice.objects.create(
            created_at=advice.created_at,
            updated_at=advice.updated_at,
            id=advice.id,
            type=advice.type,
            text=advice.text,
            note=advice.note,
            is_refusal_note=advice.is_refusal_note,
            level=advice.level,
            footnote=advice.footnote,
            footnote_required=advice.footnote_required,
            case=advice.case,
            team=advice.team,
            user=advice.user,
        )
        advice.baseadvice_ptr = base_advice
        advice.save()


class Migration(migrations.Migration):

    dependencies = [
        ("teams", "0009_update_beis_to_desnz"),
        ("users", "0006_alter_userorganisationrelationship_user"),
        ("contenttypes", "0002_remove_content_type_name"),
        ("cases", "0068_openadvice"),
    ]

    operations = [
        migrations.CreateModel(
            name="BaseAdvice",
            fields=[
                (
                    "created_at",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="created_at"
                    ),
                ),
                (
                    "updated_at",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="updated_at"
                    ),
                ),
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("approve", "Approve"),
                            ("proviso", "Proviso"),
                            ("refuse", "Refuse"),
                            ("no_licence_required", "No Licence Required"),
                            ("not_applicable", "Not Applicable"),
                            ("conflicting", "Conflicting"),
                            ("inform", "Inform"),
                            ("f680", "F680"),
                        ],
                        max_length=30,
                    ),
                ),
                ("text", models.TextField(blank=True, default=None, null=True)),
                ("note", models.TextField(blank=True, default=None, null=True)),
                ("is_refusal_note", models.BooleanField(default=False)),
                (
                    "level",
                    models.CharField(choices=[("user", "User"), ("team", "Team"), ("final", "Final")], max_length=30),
                ),
                ("footnote", models.TextField(blank=True, default=None, null=True)),
                ("footnote_required", models.BooleanField(blank=True, default=None, null=True)),
                (
                    "case",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="advice", to="cases.case"
                    ),
                ),
                (
                    "polymorphic_ctype",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="polymorphic_%(app_label)s.%(class)s_set+",
                        to="contenttypes.contenttype",
                    ),
                ),
                ("team", models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to="teams.team")),
                ("user", models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="users.govuser")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="advice",
            name="baseadvice_ptr",
            field=models.ForeignKey(
                auto_created=True,
                default=None,
                on_delete=django.db.models.deletion.CASCADE,
                parent_link=True,
                primary_key=False,
                serialize=False,
                to="cases.baseadvice",
                null=True,
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="openadvice",
            name="baseadvice_ptr",
            field=models.ForeignKey(
                auto_created=True,
                default=None,
                on_delete=django.db.models.deletion.CASCADE,
                parent_link=True,
                primary_key=False,
                serialize=False,
                to="cases.baseadvice",
                null=True,
            ),
            preserve_default=False,
        ),
        migrations.RunPython(
            populate_base_advice,
            reverse_code=migrations.RunPython.noop,
        ),
        migrations.RemoveField(
            model_name="advice",
            name="case",
        ),
        migrations.RemoveField(
            model_name="advice",
            name="created_at",
        ),
        migrations.RemoveField(
            model_name="advice",
            name="footnote",
        ),
        migrations.RemoveField(
            model_name="advice",
            name="footnote_required",
        ),
        migrations.RemoveField(
            model_name="advice",
            name="id",
        ),
        migrations.RemoveField(
            model_name="advice",
            name="is_refusal_note",
        ),
        migrations.RemoveField(
            model_name="advice",
            name="level",
        ),
        migrations.RemoveField(
            model_name="advice",
            name="note",
        ),
        migrations.RemoveField(
            model_name="advice",
            name="polymorphic_ctype",
        ),
        migrations.RemoveField(
            model_name="advice",
            name="team",
        ),
        migrations.RemoveField(
            model_name="advice",
            name="text",
        ),
        migrations.RemoveField(
            model_name="advice",
            name="type",
        ),
        migrations.RemoveField(
            model_name="advice",
            name="updated_at",
        ),
        migrations.RemoveField(
            model_name="advice",
            name="user",
        ),
        migrations.RemoveField(
            model_name="openadvice",
            name="case",
        ),
        migrations.RemoveField(
            model_name="openadvice",
            name="created_at",
        ),
        migrations.RemoveField(
            model_name="openadvice",
            name="footnote",
        ),
        migrations.RemoveField(
            model_name="openadvice",
            name="footnote_required",
        ),
        migrations.RemoveField(
            model_name="openadvice",
            name="id",
        ),
        migrations.RemoveField(
            model_name="openadvice",
            name="is_refusal_note",
        ),
        migrations.RemoveField(
            model_name="openadvice",
            name="level",
        ),
        migrations.RemoveField(
            model_name="openadvice",
            name="note",
        ),
        migrations.RemoveField(
            model_name="openadvice",
            name="polymorphic_ctype",
        ),
        migrations.RemoveField(
            model_name="openadvice",
            name="team",
        ),
        migrations.RemoveField(
            model_name="openadvice",
            name="text",
        ),
        migrations.RemoveField(
            model_name="openadvice",
            name="type",
        ),
        migrations.RemoveField(
            model_name="openadvice",
            name="updated_at",
        ),
        migrations.RemoveField(
            model_name="openadvice",
            name="user",
        ),
        migrations.AlterField(
            model_name="advice",
            name="baseadvice_ptr",
            field=models.OneToOneField(
                auto_created=True,
                default=None,
                on_delete=django.db.models.deletion.CASCADE,
                parent_link=True,
                primary_key=True,
                serialize=False,
                to="cases.baseadvice",
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="openadvice",
            name="baseadvice_ptr",
            field=models.OneToOneField(
                auto_created=True,
                default=None,
                on_delete=django.db.models.deletion.CASCADE,
                parent_link=True,
                primary_key=True,
                serialize=False,
                to="cases.baseadvice",
            ),
            preserve_default=False,
        ),
    ]
