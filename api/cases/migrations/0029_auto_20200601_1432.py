# Generated by Django 2.2.12 on 2020-06-01 14:32

from django.db import migrations, models

from api.cases.enums import EnforcementXMLEntityTypes


def forward_migration(apps, schema_editor):
    EnforcementCheckID = apps.get_model("cases", "EnforcementCheckID")
    Party = apps.get_model("parties", "Party")
    Site = apps.get_model("organisations", "Site")
    ExternalLocation = apps.get_model("organisations", "ExternalLocation")
    Organisation = apps.get_model("organisations", "Organisation")

    for enforcement_check_item in EnforcementCheckID.objects.all():
        id = enforcement_check_item.entity_id
        party = Party.objects.filter(id=id)
        if party.exists():
            enforcement_check_item.entity_type = party.first().type
            enforcement_check_item.save()
        elif Site.objects.filter(id=id).exists() or ExternalLocation.objects.filter(id=id).exists():
            enforcement_check_item.entity_type = EnforcementXMLEntityTypes.SITE
            enforcement_check_item.save()
        elif Organisation.objects.filter(id=id).exists():
            enforcement_check_item.entity_type = EnforcementXMLEntityTypes.ORGANISATION
            enforcement_check_item.save()
        else:
            # If no matching entity can be found, delete the enforcement check item
            enforcement_check_item.delete()


class Migration(migrations.Migration):

    dependencies = [
        ("cases", "0028_enforcementcheckid_entity_type"),
    ]

    operations = [migrations.RunPython(forward_migration, migrations.RunPython.noop)]
