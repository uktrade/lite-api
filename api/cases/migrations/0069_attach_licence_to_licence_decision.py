# Generated by Django 4.2.16 on 2024-11-13 17:19

from django.db import migrations, transaction

from api.cases.enums import LicenceDecisionType
from api.licences.enums import LicenceStatus


def get_licence_for_decision(licence_decision):
    if licence_decision.decision != LicenceDecisionType.ISSUED:
        return None

    licences = licence_decision.case.licences.exclude(status=LicenceStatus.DRAFT)

    return licences.earliest("created_at")


@transaction.atomic
def attach_licence_to_licence_decisions(apps, schema_editor):
    LicenceDecision = apps.get_model("cases", "LicenceDecision")

    licence_decisions_to_update = []

    for item in LicenceDecision.objects.filter(decision=LicenceDecisionType.ISSUED):
        item.licence = get_licence_for_decision(item)
        licence_decisions_to_update.append(item)

    LicenceDecision.objects.bulk_update(licence_decisions_to_update, ["licence"])


class Migration(migrations.Migration):

    dependencies = [
        ("cases", "0068_populate_licence_decisions"),
    ]

    operations = [
        migrations.RunPython(
            attach_licence_to_licence_decisions,
            migrations.RunPython.noop,
        ),
    ]
