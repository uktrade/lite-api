# Generated by Django 3.1.8 on 2021-06-30 14:45

from django.db import migrations, transaction


class Migration(migrations.Migration):
    def populate_control_list_entries(apps, schema_editor):
        """
        Legacy CLEs are added to the DB via seeding so we need to use get_or_create to add
        those that are parents to newly add CLEs via migration as migration runs first
        """
        ratings = (
            "1C35023",
            "1C35029",
            "1C3504",
            "1C35065",
            "1C35066",
            "1C35067",
            "1C35068",
            "1C35069",
            "1C35070",
            "1C35071",
            "1C35072",
            "1C35073",
            "1C35074",
            "1C35075",
            "1C35076",
            "1C35077",
            "1C35078",
            "1C35079",
            "1C35080",
            "1C35081",
            "1C35082",
            "1C35083",
            "1C35084",
            "1C35085",
            "1C35086",
            "1C35087",
            "1C35088",
            "1C35089",
        )
        family_category = "Dual-Use List"
        ControlListEntry = apps.get_model("control_list_entries", "ControlListEntry")

        with transaction.atomic():
            great_grandparent_cle, created = ControlListEntry.objects.get_or_create(
                rating="1",
                text="Special Materials and Related Equipment",
                parent_id=None,
                category=family_category,
                controlled=True,
            )
            grandparent_cle, created = ControlListEntry.objects.get_or_create(
                rating="1C",
                text="Materials",
                parent_id=great_grandparent_cle.id,
                category=family_category,
                controlled=True,
            )
            parent_cle, created = ControlListEntry.objects.get_or_create(
                rating="1C350",
                text="Chemicals that may be used as precursors for toxic chemical agents, and chemical mixtures",
                parent_id=grandparent_cle.id,
                category=family_category,
                controlled=True,
            )

            for rating in ratings:
                ControlListEntry.objects.get_or_create(
                    rating=rating, text=rating, parent_id=parent_cle.id, category=family_category, controlled=True
                )

    dependencies = [
        ("control_list_entries", "0003_controllistentry_new_entries_20221124"),
    ]

    operations = [
        migrations.RunPython(populate_control_list_entries, migrations.RunPython.noop),
    ]
