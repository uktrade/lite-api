# Generated by Django 4.2.11 on 2024-04-18 12:00

from django.db import migrations
from api.external_data.enums import DenialEntityType


def get_denial_entity_type(data):

    entity_type = ""
    normalised_entity_type_dict = {keys.lower(): values.lower() for keys, values in data.items()}

    is_end_user_flag = normalised_entity_type_dict.get("end_user_flag", "false") == "true"
    is_consignee_flag = normalised_entity_type_dict.get("consignee_flag", "false") == "true"
    is_other_role = len(normalised_entity_type_dict.get("other_role", "")) > 0

    if is_end_user_flag and is_consignee_flag:
        entity_type = DenialEntityType.END_USER
    elif not is_end_user_flag and is_consignee_flag:
        entity_type = DenialEntityType.CONSIGNEE
    elif is_end_user_flag and not is_consignee_flag:
        entity_type = DenialEntityType.END_USER
    elif not is_end_user_flag and not is_consignee_flag and is_other_role:
        entity_type = DenialEntityType.THIRD_PARTY

    return entity_type


def set_denial_entity_type(apps, schema_editor):

    DenialEntity = apps.get_model("external_data", "DenialEntity")

    for denial_entity in DenialEntity.objects.filter(entity_type__isnull=True):

        denial_entity_type = get_denial_entity_type(denial_entity.data)

        if denial_entity_type in ["end_user", "consignee", "third_party"]:
            denial_entity.entity_type = denial_entity_type
            denial_entity.save()


class Migration(migrations.Migration):

    dependencies = [
        ("external_data", "0022_denialentity_entity_type"),
    ]

    operations = [migrations.RunPython(set_denial_entity_type, migrations.RunPython.noop)]
