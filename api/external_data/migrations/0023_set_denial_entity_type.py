# Generated by Django 4.2.11 on 2024-04-18 12:00

from django.db import migrations
from api.external_data.enums import DenialEntityType


def get_denial_entity_type(data):

    entity_type = ""
    normalised_entity_type_dict = {keys.lower(): values.lower() for keys, values in data.items()}

    if (
        normalised_entity_type_dict.get("end_user_flag") == "true"
        and normalised_entity_type_dict.get("consignee_flag", "false") == "false"
    ):
        entity_type = DenialEntityType.END_USER
    elif (
        normalised_entity_type_dict.get("end_user_flag", "false") == "false"
        and normalised_entity_type_dict.get("consignee_flag", "false") == "true"
    ):
        entity_type = DenialEntityType.CONSIGNEE
    elif (
        normalised_entity_type_dict.get("end_user_flag", "false") == "true"
        and normalised_entity_type_dict.get("consignee_flag", "false") == "true"
    ):
        entity_type = DenialEntityType.END_USER
    elif (
        normalised_entity_type_dict.get("end_user_flag", "false") == "false"
        and normalised_entity_type_dict.get("consignee_flag", "false") == "false"
        and isinstance(normalised_entity_type_dict["other_role"], str)
    ):
        entity_type = DenialEntityType.THIRD_PARTY

    return entity_type


def set_denial_entity_type(apps, schema_editor):

    DenialEntity = apps.get_model("external_data", "DenialEntity")
    filtered_denial_entities_queryset = DenialEntity.objects.filter(entity_type__isnull=True)
    for denial_entity in filtered_denial_entities_queryset:
        denial_entity_type = get_denial_entity_type(denial_entity.data)
        if denial_entity_type in ["End-user", "Consignee", "Third-party"]:
            denial_entity.save(denial_entity_type)


class Migration(migrations.Migration):

    dependencies = [
        ("external_data", "0022_denialentity_entity_type"),
    ]

    operations = [migrations.RunPython(set_denial_entity_type, migrations.RunPython.noop)]
