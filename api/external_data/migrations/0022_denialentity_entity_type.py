# Generated by Django 4.2.11 on 2024-04-18 08:45

from django.db import migrations, models
from django.db import IntegrityError
from django.db import transaction
import logging

log = logging.getLogger(__name__)


def set_denial_entity_type(apps, schema_editor):

    DenialEntity = apps.get_model("external_data", "DenialEntity")
    duplicate_denial_errors = []

    with transaction.atomic():
        sid = transaction.savepoint()
        for denial_entity in DenialEntity.objects.all():
            try:
                # code to set entity type in each record goes here
                # denial_entity.entity_type =
                denial_entity.save()
            except IntegrityError as e:
                duplicate_denial_errors.append(denial_entity.entity_type)

        if duplicate_denial_errors:
            log.info(
                "There are the following duplicate denials in the database rolling back this migration: -> %s",
                duplicate_denial_errors,
            )
            transaction.savepoint_rollback(sid)
        else:
            transaction.savepoint_commit(sid)


class Migration(migrations.Migration):

    dependencies = [
        ("external_data", "0021_denialentity_denial_id"),
    ]

    operations = [
        migrations.AddField(
            model_name="denialentity",
            name="entity_type",
            field=models.TextField(
                blank=True,
                choices=[("consignee", "Consignee"), ("end_user", "End-user"), ("third_party", "Third party")],
                default="",
                help_text="Type of entity being denied",
                null=True,
            ),
        ),
    ]
