# Generated by Django 3.2.21 on 2023-10-16 14:08

from django.db import migrations

from api.audit_trail.enums import AuditType


def populate_product_assessor_details(apps, schema_editor):
    """
    Currently the User details who assessed a product on an application are
    only available in an audit event. We now added model fields to save
    these details for future assessment and this migration is to back
    populate on all historic products that have been assessed before.
    """
    Audit = apps.get_model("audit_trail", "Audit")
    GoodOnApplication = apps.get_model("applications", "GoodOnApplication")

    # Default ordering is latest first
    # We need to update oldest first because some of these products may be assessed again
    # when the Case is sent back to TAU again so we need to capture most recent details
    for item in Audit.objects.filter(verb=AuditType.PRODUCT_REVIEWED).order_by("created_at"):
        good_on_application = GoodOnApplication.objects.get(id=item.action_object_object_id)
        good_on_application.assessed_by_id = item.actor_object_id
        good_on_application.assessment_date = item.created_at
        good_on_application.save()

    # Previously this event was emitted when a product is reviewed which is replaced by
    # the above event recently
    for item in Audit.objects.filter(verb=AuditType.GOOD_REVIEWED).order_by("created_at"):
        good_on_application = GoodOnApplication.objects.get(id=item.action_object_object_id)
        good_on_application.assessed_by_id = item.actor_object_id
        good_on_application.assessment_date = item.created_at
        good_on_application.save()


class Migration(migrations.Migration):
    dependencies = [
        ("audit_trail", "0021_alter_audit_verb"),
        ("applications", "0073_auto_20231016_1508"),
    ]

    operations = [
        migrations.RunPython(populate_product_assessor_details, migrations.RunPython.noop),
    ]
