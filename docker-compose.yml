version: '3.4'

services:
  db:
    image: "postgres:13"
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=lite-api
    expose:
      - 5432
    ports:
      - 5462:5432
    networks:
      - lite

  api:
    container_name: api
    platform: linux/amd64
    env_file:
      - .env
    build: .
    volumes:
      - .:/app
    ports:
      - 8100:8100
    links:
      - db
    expose:
      - 8100
    command: pipenv run python manage.py runserver 0.0.0.0:${PORT:-8100}
    networks:
      - lite
    stdin_open: true
    tty: true

  celery:
    build: .
    volumes:
      - .:/app
    env_file: .env
    links:
      - db
      - redis
    depends_on:
      - api
    command: pipenv run watchmedo auto-restart -d . -R -p '*.py' -- celery -A api.conf worker -l info
    networks:
      - lite
    healthcheck:
      test: [ "CMD-SHELL", "python -m dbt_copilot_python.celery_health_check.healthcheck" ]
      interval: 10s
      timeout: 5s
      retries: 2
      start_period: 5s

  celery-scheduler:
    build: .
    volumes:
      - .:/app
    env_file: .env
    links:
      - db
      - redis
    depends_on:
      - api
    command:  pipenv run watchmedo auto-restart -d . -R -p '*.py' -- celery -A api.conf beat
    networks:
      - lite

  opensearch:
    image: opensearchproject/opensearch:2.14.0
    container_name: opensearch
    environment:
      - cluster.name=cluster-001
      - node.name=node-001
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - DISABLE_INSTALL_DEMO_CONFIG=true # Prevents execution of bundled demo script which installs demo certificates and security configurations to OpenSearch
      - DISABLE_SECURITY_PLUGIN=true # Disables security plugin
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - opensearch-data:/usr/share/opensearch/data
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - lite

  opensearch-dashboard:
    build:
      context: .
      dockerfile: Dockerfile.opensearch-dashboards
    container_name: opensearch-dashboard
    ports:
      - 5601:5601
    networks:
      - lite

  redis:
    image: "redis:5-alpine"
    container_name: redis
    expose:
      - 6379
    ports:
      - 6379:6379
    networks:
      - lite

  s3:
    image: minio/minio
    ports:
      - 9000:9000
      - 9001:9001
    entrypoint: sh
    command: -c 'mkdir -p /buckets/uploads && mkdir -p /buckets/anonymiser && minio server /buckets --console-address ":9001"'
    environment:
      - MINIO_ROOT_USER=minio_username
      - MINIO_ROOT_PASSWORD=minio_password
    networks:
      - lite

networks:
  lite:
    external: true
volumes:
  opensearch-data:
    driver: local
