DEBUG=True

# update username/password to match your local configuration
DATABASE_URL=postgres://postgres:password@db:5432/lite-api

# Comment above and uncomment below when not running in docker
#DATABASE_URL=postgres://postgres:password@localhost:5432/lite-api

PORT=8100
ALLOWED_HOSTS=*
OAUTHLIB_INSECURE_TRANSPORT=True
ENV=local

# SEED USERS
INTERNAL_USERS=[{"email": "", "role": "Super User"}, {"email": "test-uat-user@digital.trade.gov.uk", "role": "Super User"}, {"email": "tautest@example.com", "role": "Super User", "first_name":"TAU", "last_name":"User"}]
# 'email' is required
# 'role' defaults to 'Super User' if not specified
EXPORTER_USERS=[{"email": "", "organisation": "Archway Communications", "role": "Administrator"}]
# 'email' is required
# 'organisation' defaults to 'Archway Communications' and role to Administrator if not specificied

# INTERNAL_USERS are also seeded as exporter users so they do not need to be added
# to the EXPORTER_USERS variable
# Although, if you wish to specify what organisation or role they have as an exporter,
# you will need to add them to EXPORTER_USERS and specify that information there

REDIS_BASE_URL=redis://redis:6379
# Comment above and uncomment below when not running in docker
# REDIS_BASE_URL=redis://localhost:6379

# disable below is elastic not installed locally
LITE_API_ENABLE_ES=True

# AWS
AWS_ENDPOINT_URL=http://s3:9000
AWS_ACCESS_KEY_ID=minio_username
AWS_SECRET_ACCESS_KEY=minio_password
AWS_STORAGE_BUCKET_NAME=uploads
AWS_REGION=eu-west-2

# AV
AV_SERVICE_URL=http://localhost:8100/mock_virus_scan/scan
AV_SERVICE_USERNAME=DUMMY
AV_SERVICE_PASSWORD=DUMMY
MOCK_VIRUS_SCAN_ACTIVATE_ENDPOINTS=True

# HMRC Integration
LITE_HMRC_INTEGRATION_ENABLED=<<FROM_VAULT>>
LITE_HMRC_INTEGRATION_URL=<<FROM_VAULT>>

PYTHONUNBUFFERED=1
UPLOAD_DOCUMENT_ENDPOINT_ENABLED=<<FROM_VAULT>>

DJANGO_SECRET_KEY=<<FROM_VAULT>>

HAWK_LITE_DATA_WORKSPACE_KEY=<<FROM_VAULT>>
LITE_EXPORTER_HAWK_KEY=LITE_EXPORTER_HAWK_KEY
LITE_INTERNAL_HAWK_KEY=LITE_INTERNAL_HAWK_KEY
LITE_E2E_HAWK_KEY=<<FROM_VAULT>>
LITE_PERFORMANCE_HAWK_KEY=<<FROM_VAULT>>
LITE_HMRC_INTEGRATION_HAWK_KEY=<<FROM_VAULT>>
LITE_ACTIVITY_STREAM_HAWK_KEY=<<FROM_VAULT>>
LITE_API_HAWK_KEY=<<FROM_VAULT>>

PERFORMANCE_TEST_HOST=PERFORMANCE_TEST_HOST
PERFORMANCE_GOV_USER=PERFORMANCE_GOV_USER
PERFORMANCE_EXPORTER_USER=PERFORMANCE_EXPORTER_USER
PERFORMANCE_EXPORTER_ORGANISATION=PERFORMANCE_EXPORTER_ORGANISATION


# Gov notify
GOV_NOTIFY_ENABLED=False
GOV_NOTIFY_KEY=<<FROM_VAULT>>
INTERNAL_BASE_URL=INTERNAL_BASE_URL

# Document signing
DOCUMENT_SIGNING_ENABLED=<<FROM_VAULT>>
P12_CERTIFICATE=<<FROM_VAULT>>  # Base64 encoded P12 file (Certificate & Private key)
CERTIFICATE_PASSWORD=<<FROM_VAULT>>
SIGNING_EMAIL=<<FROM_VAULT>>
SIGNING_LOCATION=<<FROM_VAULT>>
SIGNING_REASON=<<FROM_VAULT>>

PERMISSIONS_FINDER_URL=<<FROM_VAULT>> # required for accessing exporter lite content, can be empty string

ELASTICSEARCH_HOST=http://host.docker.internal:9200
# Comment above and uncomment below when not running in docker
# ELASTICSEARCH_HOST=http://localhost:9200

FEATURE_SIEL_COMPLIANCE_ENABLED=False

# Running celery non async for development
CELERY_ALWAYS_EAGER=True
CELERY_TASK_ALWAYS_EAGER=True
CELERY_TASK_STORE_EAGER_RESULT=True
